{"version":3,"sources":["Components/Button.jsx","Components/LoginPage.jsx","Components/StudentView.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Button","className","this","props","active","buttonType","onClick","onclick","text","React","Component","defaultProps","LoginPage","state","email","password","login","bind","createAccount","bcrypt","hash","err","b64hash","btoa","fetch","method","headers","body","JSON","stringify","console","log","type","name","id","placeholder","StudentView","App","loggedIn","student","basename","process","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6hBAUMA,E,4JACJ,WAAU,IAAD,OACP,OACE,qBACEC,UACEC,KAAKC,MAAMC,OACP,WAAaF,KAAKC,MAAME,WACxB,WAAaH,KAAKC,MAAME,WAE9BC,QACEJ,KAAKC,MAAMC,OACP,kBAAM,EAAKD,MAAMI,WACjB,aATR,SAYE,+BAAOL,KAAKC,MAAMK,a,GAfLC,IAAMC,WAqBZV,IAEfA,EAAOW,aAAe,CACpBP,QAAQ,EACRI,KAAM,GACNH,WAAY,I,sBCyCCO,E,kDAxEb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXC,MAAO,GACPC,SAAU,IAEZ,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBAPJ,E,yCAYnB,WACE,IAAIH,EAAQZ,KAAKW,MAAMC,MACvBK,IAAOC,KAAKlB,KAAKW,MAAME,SAAU,IAAI,SAAUM,EAAKD,GAClD,IAAIE,EAAUC,KAAKH,GACnBI,MAAM,SAAU,CACdC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEf,MAAOA,EAAOC,SAAUO,W,2BAKrD,WAEEQ,QAAQC,IAAI,uB,oBAGd,WAAU,IAAD,OACP,OACE,sBAAK9B,UAAU,qBAAf,UACE,qBAAKA,UAAU,WAAf,uBACA,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,cAAb,kCACA,qBAAKA,UAAU,cACf,mBAAGA,UAAU,mBAAb,oBACA,uBACE+B,KAAK,QACLC,KAAK,QACLC,GAAG,QACHjC,UAAU,aACVkC,YAAY,aAEd,mBAAGlC,UAAU,sBAAb,uBACA,uBACE+B,KAAK,WACLC,KAAK,WACLC,GAAG,WACHjC,UAAU,gBACVkC,YAAY,gBAEd,cAAC,EAAD,CACE/B,QAAQ,EACRG,QAAS,kBAAM,EAAKS,SACpBR,KAAK,QACLH,WAAW,gBAEb,cAAC,EAAD,CACED,QAAQ,EACRG,QAAS,kBAAM,EAAKW,iBACpBV,KAAK,iBACLH,WAAW,6B,GAhEDI,IAAMC,W,kBCUf0B,E,kDAXX,WAAYjC,GAAQ,uCACVA,G,0CAGV,WACI,OACI,+E,GAPcM,IAAMC,W,eC6CjB2B,E,kDAjCb,WAAYlC,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXyB,UAAU,EACVC,SAAS,GAJM,E,0CAQnB,WACE,OACE,cAAC,IAAD,CAAQC,SAAUC,GAAlB,SACE,qBAAKxC,UAAU,MAAf,SACE,qBAAKA,UAAWC,KAAKW,MAAMyB,SAAW,WAAa,cAAnD,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOI,KAAK,IAAZ,SACGxC,KAAKW,MAAMyB,SACVpC,KAAKW,MAAM0B,QACT,cAAC,EAAD,IAEA,cAAC,IAAD,IAGF,cAAC,EAAD,kB,GAvBA9B,IAAMC,WCDTiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OAAO,cAAC,IAAD,UAAQ,cAAC,EAAD,MAAkBC,SAASC,eAAe,SAKlEZ,K","file":"static/js/main.dc980d01.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\n// Define a general Button component to for ease of creation and functionality\n// props to pass:\n// props.active = defaults to false. Is the button active or disabled at the moment\n// props.text = defaults to \"\". The text to display on the button\n// props.onclick = no default. The function to call when the button is clicked\n// props.buttonType = defaults to \"\". This is the class(es) that will help to style the button\n\nclass Button extends React.Component {\n  render() {\n    return (\n      <div\n        className={\n          this.props.active\n            ? \"aButton \" + this.props.buttonType\n            : \"iButton \" + this.props.buttonType\n        }\n        onClick={\n          this.props.active\n            ? () => this.props.onclick()\n            : () => {}\n        }\n      >\n        <span>{this.props.text}</span>\n      </div>\n    );\n  }\n}\n\nexport default Button;\n\nButton.defaultProps = {\n  active: false,\n  text: \"\",\n  buttonType: \"\",\n};\n","import React from \"react\";\nimport Button from \"./Button.jsx\";\nimport bcrypt from \"bcryptjs\";\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n    this.login = this.login.bind(this);\n    this.createAccount = this.createAccount.bind(this);\n  }\n\n  //TODO: Functions to verify email and password are \"valid\"\n\n  login() {\n    var email = this.state.email;\n    bcrypt.hash(this.state.password, 10, function (err, hash) {\n      var b64hash = btoa(hash);\n      fetch(\"/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email: email, password: b64hash }),\n      })\n    });\n  }\n\n  createAccount() {\n    //TODO: Navigate to create account (this will be likely done through a <Link> tag, not a function)\n    console.log(\"Creating Account!\");\n  }\n\n  render() {\n    return (\n      <div className=\"loginPageContainer\">\n        <div className=\"logoText\">OH-Helper</div>\n        <div className=\"loginWindowContainer\">\n          <div className=\"loginWindow\">\n            <p className=\"loginHeader\">Login/Create Account</p>\n            <div className=\"lineBreak\"></div>\n            <p className=\"emailInputHeader\">Email:</p>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              className=\"emailInput\"\n              placeholder=\"Email...\"\n            />\n            <p className=\"passwordInputHeader\">Password:</p>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              className=\"passwordInput\"\n              placeholder=\"Password...\"\n            />\n            <Button\n              active={true}\n              onclick={() => this.login()}\n              text=\"Login\"\n              buttonType=\"loginButton\"\n            ></Button>\n            <Button\n              active={true}\n              onclick={() => this.createAccount()}\n              text=\"Create Account\"\n              buttonType=\"createButton\"\n            ></Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from \"react\";\n\nclass StudentView extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>It's dangerous to test alone, take this!</div>\n        );\n    }\n}\n\nexport default StudentView","import \"./App.css\";\nimport React from \"react\";\nimport LoginPage from \"./Components/LoginPage\";\nimport TeacherView from \"./Components/TeacherView\";\nimport StudentView from \"./Components/StudentView\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n  Link,\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      student: true, // default to student privledges\n    };\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <div className={this.state.loggedIn ? \"mContent\" : \"mContentOut\"}>\n            <Switch>\n              <Route path=\"/\">\n                {this.state.loggedIn ? (\n                  this.state.student ? (\n                    <StudentView /> //TODO: maybe redirects instead?\n                  ) : (\n                    <TeacherView /> //TODO: maybe redirects instead?\n                  )\n                ) : (\n                  <LoginPage /> //TODO: maybe redirects instead?\n                )}\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}