{"version":3,"sources":["Components/Button.jsx","Components/RouteButton.jsx","Components/TeacherView.jsx","Components/StudentView.jsx","Components/LoginPage.jsx","Components/DropDownOption.jsx","Components/DropDownMenu.jsx","Components/DropDownComponent.jsx","Components/PriorityLabel.jsx","Components/Ticket.jsx","Assets/blankProfilePhoto.png","Components/TATile.jsx","Components/CreateAccountPage.jsx","Components/StudentOption.jsx","Components/TASelectPage.jsx","Components/PasswordReset.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Button","className","this","props","active","buttonType","onClick","onclick","text","React","Component","defaultProps","history","useHistory","push","route","alert","socket","LoginPage","login","email","state","pass","password","fetch","method","headers","body","JSON","stringify","salt","then","response","json","success","AccType","loginFlag","Username","emailOnChange","event","setState","target","value","passwordOnChange","type","name","id","placeholder","onChange","DropDownOption","last","first","DropDownMenu","options","map","option","at","DropDownComponent","dropPressed","isDropped","PriorityLabel","priorityObj","priority","toLowerCase","Ticket","teacherOptions","admin","optionsList","acceptFunction","deleteFunction","question","priorityLevels","TeacherView","searchOnChanged","searchText","acceptTicket","send","Name","Issue","Label","Action","removeTicket","console","log","ticketData","Question","ticket","searchResults","student","currentPriority","WebSocket","addEventListener","data","parse","Message","Priority","result","TATile","src","img","alt","defaultImage","StudentView","questionOnChanged","priorityOnChanged","grabPriority","Object","keys","filter","level","submitQuestion","activeTAs","questionMaxLength","questionMinLength","ok","taList","accType","ta","special","specialties","length","maxLength","minLength","values","key","CreateAccountPage","createAccount","ubit","cPass","confirmPass","nameOnChange","confirmPassOnChange","ubitOnChange","accTypeOnChange","StudentOption","changeRole","roleBool","selected","newRole","role","TASelectPage","componentDidMount","status","studentOptions","PasswordReset","updateEmail","updatePass","newPass","updateConfirmPass","handleUpdatePass","App","setLoginFlag","loggedIn","basename","process","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.949e2c85.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\n// Define a general Button component to for ease of creation and functionality\r\n// props to pass:\r\n// props.active = defaults to false. Is the button active or disabled at the moment\r\n// props.text = defaults to \"\". The text to display on the button\r\n// props.onclick = no default. The function to call when the button is clicked\r\n// props.buttonType = defaults to \"\". This is the class(es) that will help to style the button\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.active\r\n            ? \"aButton \" + this.props.buttonType\r\n            : \"iButton \" + this.props.buttonType\r\n        }\r\n        onClick={\r\n          this.props.active\r\n            ? () => this.props.onclick()\r\n            : () => {}\r\n        }\r\n      >\r\n        <span>{this.props.text}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.defaultProps = {\r\n  active: false,\r\n  text: \"\",\r\n  buttonType: \"\",\r\n};\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Define a general Button component to for ease of creation and functionality\r\n// props to pass:\r\n// props.active = defaults to false. Is the button active or disabled at the moment\r\n// props.text = defaults to \"\". The text to display on the button\r\n// props.route = no default. The route to navigate to on click\r\n// props.buttonType = defaults to \"\". This is the class(es) that will help to style the button\r\n\r\nexport default function Button(props) {\r\n  let history = useHistory();\r\n  return (\r\n    <div\r\n      className={\r\n        props.active\r\n          ? \"aButton \" + props.buttonType\r\n          : \"iButton \" + props.buttonType\r\n      }\r\n      onClick={\r\n        props.active\r\n          ? () => {\r\n              props.onclick()\r\n                ? history.push(props.route)\r\n                : alert(\"Something went wrong.\");\r\n            }\r\n          : () => {}\r\n      }\r\n    >\r\n      <span>{props.text}</span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport Ticket from \"./Ticket.jsx\";\r\nimport RouteButton from \"./RouteButton\";\r\n\r\nvar socket;\r\n\r\nclass TeacherView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticket: [],\r\n      searchResults: [],\r\n      student: false,\r\n      searchText: \"\",\r\n      priorityLevels: { 0: \"Homework\", 1: \"Exam\", 2: \"Lab\", 3: \"Lecture\" },\r\n      currentPriority: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    socket = new WebSocket(\"ws://localhost:8000/websocket\");\r\n\r\n    socket.addEventListener(\"open\", (event) => {\r\n      console.log(\"Websocket Connected!\");\r\n    });\r\n\r\n    socket.addEventListener(\"message\", (event) => {\r\n      var data = JSON.parse(event.data);\r\n      this.setState({ ticket: data[\"Queue\"] });\r\n    });\r\n\r\n    socket.addEventListener(\"close\", (event) => {\r\n      console.log(\"Websocket Disconnected!\");\r\n    });\r\n  }\r\n\r\n  searchOnChanged = (event) => {\r\n    this.setState({ searchText: event.target.value });\r\n  };\r\n\r\n  acceptTicket = () => {\r\n    var ticketData = {\r\n      Name: \"\",\r\n      Issue: \"\",\r\n      Label: \"\",\r\n      Action: \"Remove\",\r\n    };\r\n    socket.send(JSON.stringify(ticketData));\r\n  };\r\n\r\n  removeTicket = (question) => {\r\n    console.log(question);\r\n    var ticketData = {\r\n      Name: \"\",\r\n      Issue: \"\",\r\n      Label: \"\",\r\n      Question: question,\r\n      Action: \"Remove\",\r\n    };\r\n    socket.send(JSON.stringify(ticketData));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"teacherViewContainer\">\r\n        <div className=\"teacherQueueContainer\">\r\n          <div className=\"teacher headerText\">Student Queue</div>\r\n          <div className=\"teacherQueueWindow\">\r\n            {this.state.ticket.map((ticket) => {\r\n              return (\r\n                <Ticket\r\n                  name={ticket.Name}\r\n                  question={ticket.Message}\r\n                  admin={true}\r\n                  priority={ticket.Priority}\r\n                  priorityLevels={this.state.priorityLevels}\r\n                  acceptFunction={this.acceptTicket}\r\n                  deleteFunction={this.removeTicket}\r\n                ></Ticket>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"rightMaster\">\r\n          <div className=\"accountNameTeacher\">\r\n            {\"Welcome, \" + this.props.name}\r\n          </div>\r\n          <div className=\"studentSearchHeader\">Student Search:</div>\r\n          <input\r\n            className=\"studentSearchBar\"\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            onChange={this.searchOnChanged}\r\n          ></input>\r\n          <Button buttonType=\"search\" active={true} text=\"Search\"></Button>\r\n          <div className=\"resultsContainer\">\r\n            {this.state.searchResults.map((result) => {\r\n              return <p>Test</p>;\r\n            })}\r\n          </div>\r\n          <RouteButton\r\n            active={true}\r\n            route=\"/taSelector\"\r\n            onclick={() => {\r\n              return true;\r\n            }}\r\n            text=\"Teaching Assistant Select\"\r\n            buttonType=\"taButton\"\r\n          ></RouteButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeacherView;\r\n","import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport TATile from \"./TATile.jsx\";\r\nimport Ticket from \"./Ticket.jsx\";\r\n\r\nvar socket;\r\n\r\nclass StudentView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticket: [],\r\n      activeTAs: [],\r\n      student: true,\r\n      question: \"\",\r\n      questionMaxLength: 100,\r\n      questionMinLength: 20,\r\n      priorityLevels: { 0: \"Homework\", 1: \"Exam\", 2: \"Lab\", 3: \"Lecture\" },\r\n      currentPriority: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    socket = new WebSocket(\"ws://localhost:8000/websocket\");\r\n\r\n    socket.addEventListener(\"open\", (event) => {\r\n      console.log(\"Websocket Connected!\");\r\n    });\r\n\r\n    socket.addEventListener(\"message\", (event) => {\r\n      var data = JSON.parse(event.data);\r\n      console.log(data);\r\n      this.setState({ ticket: data[\"Queue\"] });\r\n    });\r\n\r\n    socket.addEventListener(\"close\", (event) => {\r\n      console.log(\"Websocket Disconnected!\");\r\n    });\r\n\r\n    fetch(\"/getStudents\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(\"\"),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok === false) {\r\n          alert(\"Error: Couldn't connect to server\");\r\n          return \"\";\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (data === \"\") {\r\n          return;\r\n        }\r\n        var taList = [];\r\n        data.map((student) => {\r\n          if (student.accType === true) {\r\n            taList.push(student);\r\n          }\r\n        });\r\n\r\n        this.setState({ activeTAs: taList });\r\n      });\r\n  }\r\n\r\n  questionOnChanged = (event) => {\r\n    this.setState({ question: event.target.value });\r\n  };\r\n\r\n  priorityOnChanged = (event) => {\r\n    //this is convuluted but i refuse to make a second static object\r\n    var grabPriority = Object.keys(this.state.priorityLevels).filter(\r\n      (level) => {\r\n        return this.state.priorityLevels[level] === event.target.value;\r\n      }\r\n    );\r\n    this.setState({ currentPriority: grabPriority[0] });\r\n  };\r\n\r\n  submitQuestion = () => {\r\n    var ticketData = {\r\n      Name: this.props.name,\r\n      Issue: this.state.question,\r\n      Label: this.state.currentPriority,\r\n      Action: \"Add\",\r\n    };\r\n    socket.send(JSON.stringify(ticketData));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"studentViewContainer\">\r\n        <div className=\"studentQueueContainer\">\r\n          <div className=\"student headerText\">Student Queue</div>\r\n          <div className=\"studentQueueWindow\">\r\n            {this.state.ticket.map((ticket) => {\r\n              return (\r\n                <Ticket\r\n                  name={ticket.Name}\r\n                  question={ticket.Message}\r\n                  admin={false}\r\n                  priority={ticket.Priority}\r\n                  priorityLevels={this.state.priorityLevels}\r\n                ></Ticket>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"rightMasterStudent\">\r\n          <div className=\"welcomeStudent\">{\"Welcome, \" + this.props.name}</div>\r\n          <div className=\"activeTA headerText\">Active TA's</div>\r\n          <div className=\"activeTAWindow\">\r\n            {this.state.activeTAs.map((ta) => {\r\n              return <TATile name={ta.name} special={ta.specialties} />;\r\n            })}\r\n          </div>\r\n          <div className=\"newQuestionContainer\">\r\n            <div className=\"newQuestionHeader\">New Question</div>\r\n            <p className=\"charCount\">\r\n              Min: {this.state.question.length}/{this.state.questionMinLength}{\" \"}\r\n              Max: {this.state.question.length}/{this.state.questionMaxLength}\r\n            </p>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"newQuestionInput\"\r\n              placeholder=\"Write question here...\"\r\n              maxLength={this.state.questionMaxLength}\r\n              minLength={this.state.questionMinLength}\r\n              onChange={this.questionOnChanged}\r\n            ></textarea>\r\n            <div className=\"studentButtonContainer\">\r\n              <Button\r\n                active={true}\r\n                text=\"Post\"\r\n                buttonType=\"postButton\"\r\n                onclick={this.submitQuestion}\r\n              ></Button>\r\n              <select\r\n                className=\"priorityDropdown\"\r\n                onChange={this.priorityOnChanged}\r\n              >\r\n                {Object.values(this.state.priorityLevels).map((key) => {\r\n                  return (\r\n                    <option className=\"priorityOption\" value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentView;\r\n","import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport RouteButton from \"./RouteButton.jsx\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { Route } from \"react-router\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  //TODO: Functions to verify email and password are \"valid\"\r\n\r\n  login = () => {\r\n    var email = this.state.email;\r\n    var pass = this.state.password;\r\n\r\n    // bcrypt.genSalt(10, function (err, salt) {\r\n    //   bcrypt.hash(pass, salt, function (err, hash) {\r\n    //     var b64hash = btoa(hash);\r\n\r\n    //   });\r\n    // });\r\n\r\n    fetch(\"/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email: email, password: pass, salt:\"\"}),\r\n    })\r\n      .then((response) => response !== \"\" ? response.json() : \"\")\r\n      .then((success) => {\r\n        if (success !== \"\") {\r\n          if (success.AccType === \"teacher\") {\r\n            this.props.loginFlag(true, false, success.Username);\r\n          } else if (success.AccType === \"student\") {\r\n            this.props.loginFlag(true, true, success.Username);\r\n          } else if (success.AccType === \"instructor\") {\r\n            this.props.loginFlag(true, false, success.Username);\r\n          }\r\n        } else {\r\n          this.props.loginFlag(false, false, \"\");\r\n        }\r\n      });\r\n    //this.props.loginFlag(true, false, \"Jesse Hartloff\");\r\n    return true;\r\n  };\r\n\r\n  emailOnChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  passwordOnChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginPageContainer\">\r\n        <div className=\"logoText\">OH-Helper</div>\r\n        <div className=\"loginWindowContainer\">\r\n          <div className=\"loginWindow\">\r\n            <p className=\"loginHeader\">Login/Create Account</p>\r\n            <div className=\"lineBreak\"></div>\r\n            <p className=\"email inputHeader\">Email:</p>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Email...\"\r\n              onChange={this.emailOnChange}\r\n            />\r\n            <p className=\"password inputHeader\">Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Password...\"\r\n              onChange={this.passwordOnChange}\r\n            />\r\n            <RouteButton active={true} route=\"/forgotPassword\" onclick={()=>{return true;}} text=\"Forgot Password?\" buttonType=\"forgotPasswordLink\"/>\r\n            <Button\r\n              active={true}\r\n              onclick={this.login}\r\n              text=\"Login\"\r\n              buttonType=\"loginButton\"\r\n            ></Button>\r\n            <RouteButton\r\n              active={true}\r\n              route=\"/createAccount\"\r\n              onclick={() => {\r\n                return true;\r\n              }}\r\n              text=\"Create Account\"\r\n              buttonType=\"createButton\"\r\n            ></RouteButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n\r\n// props:\r\n// name: The class name of the option\r\n// text: The text on the option\r\n// onClick: The function to call when the option is clicked\r\n// active: If the option is active\r\n// last: If its the last option\r\n// first: if its the first option\r\n\r\nexport default class DropDownOption extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.last\r\n            ? this.props.active\r\n              ? this.props.name + \" dropoption active last\"\r\n              : this.props.name + \" dropoption inactive last\"\r\n            : this.props.first\r\n            ? this.props.active\r\n              ? this.props.name + \" dropoption active first\"\r\n              : this.props.name + \" dropoption inactive first\"\r\n            : this.props.active\r\n            ? this.props.name + \" dropoption active\"\r\n            : this.props.name + \" dropoption inactive\"\r\n        }\r\n        onClick={this.props.onClick}\r\n      >\r\n        {this.props.text}\r\n        {this.props.last ? null : <div className=\"dropdownLines\"></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DropDownOption from \"./DropDownOption\";\r\n\r\n// props:\r\n// options: List of kvs that contain the props for the DropDownOption component {name:\"\", text:\"\", active:false/true, onClick:()=>{}}\r\n// active: Whether its active or not\r\n// name: Name of component\r\n// visible: is the menu dropped\r\nexport default class DropDownMenu extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.active\r\n            ? this.props.name + \" dropdown active\"\r\n            : this.props.name + \" dropdown inactive\"\r\n        }\r\n      >\r\n        {this.props.options.map((option) => {\r\n              if (option === this.props.options.at(-1)) {\r\n                return (\r\n                    <DropDownOption\r\n                      key={option.name}\r\n                      name={option.name}\r\n                      text={option.text}\r\n                      active={option.active}\r\n                      onClick={option.onClick}\r\n                      last={true}\r\n                      first={false}\r\n                    />\r\n                  );\r\n              } else if (option === this.props.options.at(0)) {\r\n                return (\r\n                  <DropDownOption\r\n                    key={option.name}\r\n                    name={option.name}\r\n                    text={option.text}\r\n                    active={option.active}\r\n                    onClick={option.onClick}\r\n                    last={false}\r\n                    first={true}\r\n                  />\r\n                );\r\n              } else {\r\n                return (\r\n                  <DropDownOption\r\n                    key={option.name}\r\n                    name={option.name}\r\n                    text={option.text}\r\n                    active={option.active}\r\n                    onClick={option.onClick}\r\n                    last={false}\r\n                    first={false}\r\n                  />\r\n                );\r\n              }\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DropDownMenu from \"./DropDownMenu\";\r\n\r\n// props:\r\n// active: whether the component is active\r\n// name: class name of the component\r\n// options: list of kvs that will be turned into DropDownOptions\r\n// text: text to display on the dropdown button\r\nexport default class DropDownComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDropped: false,\r\n    };\r\n  }\r\n\r\n  dropPressed = () => {\r\n    this.setState({ isDropped: !this.state.isDropped });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.active\r\n            ? this.props.name + \" dropContainer active\"\r\n            : this.props.name + \" dropContainer inactive\"\r\n        }\r\n      >\r\n        <div className=\"dropdownHeader\" onClick={this.dropPressed}>\r\n          {this.props.text}\r\n        </div>\r\n        {this.state.isDropped ? (\r\n          <div className=\"dropComponent\">\r\n            <DropDownMenu\r\n              active={true}\r\n              options={this.props.options}\r\n              name=\"TAOptions\"\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\n// props:\r\n// priority: The priority # of the ticket that determines what this component looks like\r\n// priorityObj: The object containing the mappings from priority # to priority text\r\n\r\nexport default class PriorityLabel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.priorityObj[this.props.priority].toLowerCase() + \" tag\"\r\n        }\r\n      >\r\n        {this.props.priorityObj[this.props.priority]}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DropDownComponent from \"./DropDownComponent\";\r\nimport PriorityLabel from \"./PriorityLabel\";\r\n\r\n// props\r\n// name: student name\r\n// question: students question\r\n// priority: priority of the question (aka tag to display)\r\n// acceptFunction: function to call on accept\r\n// deleteFunction: function to call on delete\r\n// priorityLevels: Object of priority levels\r\n\r\nexport default class Ticket extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      teacherOptions: this.props.admin ? true : false,\r\n      optionsList: [\r\n        {\r\n          name: \"accept\",\r\n          text: \"Accept\",\r\n          active: true,\r\n          onClick: this.props.admin ? this.props.acceptFunction : () => {}\r\n        },\r\n        {\r\n          name: \"delete\",\r\n          text: \"Delete\",\r\n          active: true,\r\n          onClick: this.props.admin ? () => {this.props.deleteFunction(this.props.question)} : () => {}\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"questionWindow\">\r\n        <div className=\"leftContainer\">\r\n          <div className=\"nameHolder\">{this.props.name}</div>\r\n          <div className=\"tagContainer\">\r\n            <PriorityLabel priority={this.props.priority} priorityObj={this.props.priorityLevels}></PriorityLabel>\r\n          </div>\r\n          {this.state.teacherOptions ? (\r\n            <DropDownComponent\r\n              active={true}\r\n              name=\"teacherOptions\"\r\n              options={this.state.optionsList}\r\n              text=\"Options\"\r\n            />\r\n          ) : (\r\n            <div className=\"styleTest\"></div>\r\n          )}\r\n        </div>\r\n        <div className=\"questionHolder\">{this.props.question}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/blankProfilePhoto.c3f94521.png\";","import React from \"react\";\r\nimport defaultImage from \"../Assets/blankProfilePhoto.png\";\r\n\r\n// props:\r\n// name = TA name\r\n// img = TA image\r\n// special = TA specialties\r\nexport default class TATile extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"taWindow\">\r\n        <img\r\n          className=\"taImage\"\r\n          src={this.props.img}\r\n          alt={defaultImage}\r\n        />\r\n        <div className=\"rightSide\">\r\n          <div className=\"taName\">{this.props.name}</div>\r\n          <div className=\"lineBreak\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n    //<div className=\"taSpecialties\">Specialties:</div>\r\n    //<div className=\"taSpecialtiesList\">{this.props.special.join(\", \")}</div>\r\n  }\r\n}\r\n\r\nTATile.defaultProps = {\r\n  img: defaultImage,\r\n};","import React from \"react\";\r\nimport RouteButton from \"./RouteButton.jsx\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nexport default class CreateAccountPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPass: \"\",\r\n      ubit: \"\",\r\n      accType: \"student\",\r\n    };\r\n  }\r\n\r\n  createAccount = () => {\r\n    var name = this.state.name;\r\n    var email = this.state.email;\r\n    var ubit = this.state.ubit;\r\n    var cPass = this.state.confirmPass;\r\n    var pass = this.state.password;\r\n    var accType = this.state.accType;\r\n    var success = true;\r\n    if (cPass !== pass) {\r\n      return false;\r\n    }\r\n    // bcrypt.genSalt(10, function (err, salt) {\r\n    //   bcrypt.hash(pass, salt, function (err, hash) {\r\n    //     var b64hash = btoa(hash);\r\n\r\n    //   });\r\n    // });\r\n    fetch(\"/register\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: pass,\r\n        name: name,\r\n        ubit: ubit,\r\n        salt: \"\",\r\n        accType: accType,\r\n      }),\r\n    });\r\n    return success;\r\n  };\r\n\r\n  nameOnChange = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  emailOnChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n  passwordOnChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  confirmPassOnChange = (event) => {\r\n    this.setState({ confirmPass: event.target.value });\r\n  };\r\n\r\n  ubitOnChange = (event) => {\r\n    this.setState({ ubit: event.target.value });\r\n  };\r\n\r\n  accTypeOnChange = (event) => {\r\n    this.setState({ accType: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"createPageContainer\">\r\n        <div className=\"logoText\">OH-Helper</div>\r\n        <div className=\"createWindowContainer\">\r\n          <div className=\"createWindow\">\r\n            <p className=\"createHeader\">Create Account</p>\r\n            <div className=\"lineBreak\"></div>\r\n            <p className=\"name inputHeader\">Full Name:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"name input\"\r\n              placeholder=\"Full Name...\"\r\n              onChange={this.nameOnChange}\r\n            />\r\n            <p className=\"email inputHeader\">Email:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"email input\"\r\n              placeholder=\"Email...\"\r\n              onChange={this.emailOnChange}\r\n            />\r\n            <p className=\"password inputHeader\">Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              className=\"password input\"\r\n              placeholder=\"Password...\"\r\n              onChange={this.passwordOnChange}\r\n            />\r\n            <p className=\"cPassword inputHeader\">Confirm Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              className=\"cPassword input\"\r\n              placeholder=\"Confirm Password...\"\r\n              onChange={this.confirmPassOnChange}\r\n            />\r\n            <p className=\"ubit inputHeader\">UBIT:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"ubit input\"\r\n              placeholder=\"UBIT...\"\r\n              onChange={this.ubitOnChange}\r\n            />\r\n            <p className=\"accType inputHeader\">Account Type:</p>\r\n            <select\r\n              className=\"accountType dropdown\"\r\n              onChange={this.accTypeOnChange}\r\n            >\r\n              <option value=\"student\"> Student</option>\r\n              <option value=\"teacher\">Teacher</option>\r\n            </select>\r\n            <RouteButton\r\n              active={true}\r\n              route=\"/\"\r\n              onclick={this.createAccount}\r\n              text=\"Create Account\"\r\n              buttonType=\"createButton\"\r\n            ></RouteButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nexport default class StudentOption extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: this.props.role,\r\n    };\r\n  }\r\n\r\n  //Change a students role to teacher, or set a teachers role to student\r\n  changeRole = () => {\r\n    //TODO MAKE SECURE (nobody but teacher can access this)\r\n    var roleBool = !this.state.selected;\r\n    var newRole = roleBool ? \"teacher\" : \"student\";\r\n    fetch(\"/role\", {\r\n      method: \"POST\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify({email: this.props.email, role: newRole})\r\n    })\r\n    .then((response) => {\r\n      if (response.ok === false) {\r\n        alert(\"Error: Could not reach server.\")\r\n      } else {\r\n        this.setState({ selected: roleBool });\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.state.selected ? \"studentOption selectedOption\" : \"studentOption\"\r\n        }\r\n      >\r\n        <div className=\"leftController\">\r\n          <div className=\"studentName\">{this.props.name}</div>\r\n          <div className=\"studentEmail\">{this.props.email}</div>\r\n        </div>\r\n        <div className=\"buttonContainer\">\r\n          <Button\r\n            active={true}\r\n            text={this.state.selected ? \"Selected\" : \"Select\"}\r\n            onclick={this.changeRole}\r\n            buttonType={this.state.selected ? \"selectedButton\" : \"selectButton\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport StudentOption from \"./StudentOption\";\r\nimport RouteButton from \"./RouteButton\";\r\n\r\nexport default class TASelectPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      studentOptions: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    fetch(\"/getStudents\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(\"\"),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 404 || response.status === 500) {\r\n          alert(\"Error: Couldn't connect to server\");\r\n          return \"\";\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        var options = data !== \"\" ? data : [];\r\n        this.setState({ studentOptions: options});\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pageContainer\">\r\n        <RouteButton\r\n          active={true}\r\n          text={\"Back\"}\r\n          onclick={() => {\r\n            return true;\r\n          }}\r\n          route={\"/\"}\r\n          buttonType={\"backButton\"}\r\n        />\r\n        <div className=\"outerShell\">\r\n          <div className=\"selectContainer\">\r\n            {this.state.studentOptions.map((student) => {\r\n              return (\r\n                <StudentOption\r\n                  key={student.name}\r\n                  name={student.name}\r\n                  email={student.email}\r\n                  role={student.accType}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport RouteButton from \"./RouteButton.jsx\";\r\n\r\n\r\nexport default class PasswordReset extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            email: \"\",\r\n            newPass: \"\",\r\n            confirmPass: \"\",\r\n        };\r\n    }\r\n\r\n    updateEmail = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    updatePass = (event) => {\r\n        this.setState({newPass: event.target.value});\r\n    }\r\n\r\n    updateConfirmPass = (event) => {\r\n        this.setState({confirmPass: event.target.value});\r\n    }\r\n\r\n    handleUpdatePass = () => {\r\n        fetch(\"/password_reset\")\r\n        .then((response) => {\r\n            if (response.ok === false) {\r\n                alert(\"Error connecting to server.\");\r\n            } else {\r\n                console.log(response);\r\n            }\r\n        })\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"pageContainer\">\r\n                <div className=\"passWindowContainer\">\r\n                    <div className=\"passWindow\">\r\n                        <p className=\"resetLabel\">Password Reset</p>\r\n                        <div className=\"lineBreak\"></div>\r\n                        <p className=\"emailLabel\">Account Email:</p>\r\n                        <input type=\"email\" className=\"emailInput\" placeholder=\"Account Email...\" onChange={this.updateEmail}/>\r\n                        <p className=\"passwordLabel\">New Password:</p>\r\n                        <input type=\"password\" className=\"passwordInput\" placeholder=\"New Password...\" onChange={this.updatePass}/>\r\n                        <p className=\"confirmPasswordLabel\">Confirm New Password:</p>\r\n                        <input type=\"password\" className=\"confirmPasswordInput\" placeholder=\"Confirm Password...\" onChange={this.updateConfirmPass}/>\r\n                        <RouteButton active={true} text={\"Reset\"} route={\"/\"} buttonType={\"resetButton\"} onclick={this.handleUpdatePass}></RouteButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import \"./App.css\";\r\nimport React from \"react\";\r\nimport LoginPage from \"./Components/LoginPage\";\r\nimport TeacherView from \"./Components/TeacherView\";\r\nimport StudentView from \"./Components/StudentView\";\r\nimport CreateAccountPage from \"./Components/CreateAccountPage\";\r\nimport TASelectPage from \"./Components/TASelectPage\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport PasswordReset from \"./Components/PasswordReset\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: false,\r\n      student: true, // default to student privledges\r\n      name: \"\",\r\n    };\r\n  }\r\n\r\n  setLoginFlag = (login, student, name) => {\r\n    this.setState({ loggedIn: login, student: student, name: name });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <div className={this.state.loggedIn ? \"mContent\" : \"mContentOut\"}>\r\n            <Switch>\r\n              <Route path=\"/createAccount\">\r\n                <CreateAccountPage />\r\n              </Route>\r\n              <Route path=\"/taSelector\">\r\n                <TASelectPage />\r\n              </Route>\r\n              <Route path=\"/forgotPassword\">\r\n                <PasswordReset />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                {this.state.loggedIn ? (\r\n                  this.state.student ? (\r\n                    <StudentView name={this.state.name} /> //TODO: maybe redirects instead?\r\n                  ) : (\r\n                    <TeacherView name={this.state.name} /> //TODO: maybe redirects instead?\r\n                  )\r\n                ) : (\r\n                  <LoginPage loginFlag={this.setLoginFlag} /> //TODO: maybe redirects instead?\r\n                )}\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  BrowserRouter as Router\r\n} from 'react-router-dom';\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}