{"version":3,"sources":["Components/Button.jsx","Components/RouteButton.jsx","Components/LoginPage.jsx","Components/Ticket.jsx","Components/TeacherView.jsx","Assets/blankProfilePhoto.png","Components/TATile.jsx","Components/StudentView.jsx","Components/CreateAccountPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Button","className","this","props","active","buttonType","onClick","onclick","text","React","Component","defaultProps","history","useHistory","push","route","alert","LoginPage","login","state","email","password","loginFlag","emailOnChange","event","setState","target","value","passwordOnChange","type","name","id","placeholder","onChange","Ticket","teacherOptions","question","StudentView","searchOnChanged","searchText","submitQuestion","console","log","ticket","searchResults","student","map","result","TATile","src","img","alt","defaultImage","special","join","questionOnChanged","activeTAs","questionMaxLength","questionMinLength","ta","specialties","length","maxLength","minLength","CreateAccountPage","createAccount","ubit","cPass","confirmPass","pass","accType","bcrypt","genSalt","err","salt","hash","b64hash","btoa","fetch","method","headers","body","JSON","stringify","nameOnChange","confirmPassOnChange","ubitOnChange","accTypeOnChange","App","setLoginFlag","loggedIn","basename","process","path","TeacherView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f791b62c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\n// Define a general Button component to for ease of creation and functionality\r\n// props to pass:\r\n// props.active = defaults to false. Is the button active or disabled at the moment\r\n// props.text = defaults to \"\". The text to display on the button\r\n// props.onclick = no default. The function to call when the button is clicked\r\n// props.buttonType = defaults to \"\". This is the class(es) that will help to style the button\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.active\r\n            ? \"aButton \" + this.props.buttonType\r\n            : \"iButton \" + this.props.buttonType\r\n        }\r\n        onClick={\r\n          this.props.active\r\n            ? () => this.props.onclick()\r\n            : () => {}\r\n        }\r\n      >\r\n        <span>{this.props.text}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.defaultProps = {\r\n  active: false,\r\n  text: \"\",\r\n  buttonType: \"\",\r\n};\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Define a general Button component to for ease of creation and functionality\r\n// props to pass:\r\n// props.active = defaults to false. Is the button active or disabled at the moment\r\n// props.text = defaults to \"\". The text to display on the button\r\n// props.route = no default. The route to navigate to on click\r\n// props.buttonType = defaults to \"\". This is the class(es) that will help to style the button\r\n\r\nexport default function Button(props) {\r\n  let history = useHistory();\r\n  return (\r\n    <div\r\n      className={\r\n        props.active\r\n          ? \"aButton \" + props.buttonType\r\n          : \"iButton \" + props.buttonType\r\n      }\r\n      onClick={\r\n        props.active\r\n          ? () => {\r\n              props.onclick() ? history.push(props.route) : alert(\"Something went wrong.\")\r\n            }\r\n          : () => {}\r\n      }\r\n    >\r\n      <span>{props.text}</span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport RouteButton from \"./RouteButton.jsx\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  //TODO: Functions to verify email and password are \"valid\"\r\n\r\n  login = () => {\r\n    var email = this.state.email;\r\n    var pass = this.state.password;\r\n    this.props.loginFlag(false)\r\n    // bcrypt.genSalt(10, function (err, salt) {\r\n    //   bcrypt.hash(pass, salt, function (err, hash) {\r\n    //     var b64hash = btoa(hash);\r\n    //     fetch(\"/login\", {\r\n    //       method: \"POST\",\r\n    //       headers: { \"Content-Type\": \"application/json\" },\r\n    //       body: JSON.stringify({ email: email, password: b64hash, salt: salt }),\r\n    //     });\r\n    //   });\r\n    // });\r\n    return true;\r\n  };\r\n\r\n  emailOnChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  passwordOnChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginPageContainer\">\r\n        <div className=\"logoText\">OH-Helper</div>\r\n        <div className=\"loginWindowContainer\">\r\n          <div className=\"loginWindow\">\r\n            <p className=\"loginHeader\">Login/Create Account</p>\r\n            <div className=\"lineBreak\"></div>\r\n            <p className=\"email inputHeader\">Email:</p>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Email...\"\r\n              onChange={this.emailOnChange}\r\n            />\r\n            <p className=\"password inputHeader\">Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Password...\"\r\n              onChange={this.passwordOnChange}\r\n            />\r\n            <Button\r\n              active={true}\r\n              onclick={this.login}\r\n              text=\"Login\"\r\n              buttonType=\"loginButton\"\r\n            ></Button>\r\n            <RouteButton\r\n              active={true}\r\n              route=\"/createAccount\"\r\n              onclick={() => {\r\n                return true;\r\n              }}\r\n              text=\"Create Account\"\r\n              buttonType=\"createButton\"\r\n            ></RouteButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n\r\n// props\r\n// name: student name\r\n// question: students question\r\nexport default class Ticket extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      teacherOptions: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"questionWindow\">\r\n        <div className=\"leftContainer\">\r\n          <div className=\"nameHolder\">{this.props.name}</div>\r\n          {this.state.teacherOptions ? <div>True</div> : <div>False</div>}\r\n        </div>\r\n        <div className=\"questionHolder\">{this.props.question}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport Ticket from \"./Ticket.jsx\";\r\n\r\nclass StudentView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticket: [{name: \"Lauren Bilancia\", question: \"Do you love me?\"}],\r\n      searchResults: [],\r\n      student: false,\r\n      searchText: \"\",\r\n    };\r\n  }\r\n\r\n  searchOnChanged = (event) => {\r\n    this.setState({ searchText: event.target.value });\r\n  };\r\n\r\n  submitQuestion = () => {\r\n    console.log(\"Do stuff\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"teacherViewContainer\">\r\n        <div className=\"teacherQueueContainer\">\r\n          <div className=\"teacher headerText\">Student Queue</div>\r\n          <div className=\"teacherQueueWindow\">\r\n            {this.state.ticket.map((ticket) => {\r\n                return (<Ticket name={ticket.name} question={ticket.question}></Ticket>)\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"rightMaster\">\r\n          <div className=\"studentSearchHeader\">Student Search:</div>\r\n          <input\r\n            className=\"studentSearchBar\"\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            onChange={this.searchOnChanged}\r\n          >\r\n          </input>\r\n          <Button buttonType=\"search\" active={true} text=\"Search\"></Button>\r\n          <div className=\"resultsContainer\">\r\n            {this.state.searchResults.map((result) => {\r\n              <p>Test</p>;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentView;\r\n","export default __webpack_public_path__ + \"static/media/blankProfilePhoto.c3f94521.png\";","import React from \"react\";\r\nimport defaultImage from \"../Assets/blankProfilePhoto.png\";\r\n\r\n// props:\r\n// name = TA name\r\n// img = TA image\r\n// special = TA specialties\r\nexport default class TATile extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"taWindow\">\r\n        <img\r\n          className=\"taImage\"\r\n          src={this.props.img}\r\n          alt={defaultImage}\r\n        />\r\n        <div className=\"rightSide\">\r\n          <div className=\"taName\">{this.props.name}</div>\r\n          <div className=\"lineBreak\"></div>\r\n          <div className=\"taSpecialties\">Specialties:</div>\r\n          <div className=\"taSpecialtiesList\">{this.props.special.join(\", \")}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTATile.defaultProps = {\r\n  img: defaultImage,\r\n};","import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport TATile from \"./TATile.jsx\";\r\nimport Ticket from \"./Ticket.jsx\";\r\n\r\nclass StudentView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticket: [],\r\n      activeTAs: [],\r\n      student: true,\r\n      question: \"\",\r\n      questionMaxLength: 100,\r\n      questionMinLength: 20,\r\n    };\r\n  }\r\n\r\n  questionOnChanged = (event) => {\r\n    this.setState({ question: event.target.value });\r\n  };\r\n\r\n  submitQuestion = () => {\r\n      console.log(\"Do stuff\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"studentViewContainer\">\r\n        <div className=\"studentQueueContainer\">\r\n          <div className=\"student headerText\">Student Queue</div>\r\n          <div className=\"studentQueueWindow\">\r\n            {this.state.ticket.map((ticket) => {\r\n              return (<Ticket name={ticket.name} question={ticket.question}></Ticket>)\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"rightMaster\">\r\n          <div className=\"activeTA headerText\">Active TA's</div>\r\n          <div className=\"activeTAWindow\">\r\n            {this.state.activeTAs.map((ta) => {\r\n              return (<TATile name={ta.name} special={ta.specialties}></TATile>)\r\n            })}\r\n          </div>\r\n          <div className=\"newQuestionContainer\">\r\n            <div className=\"newQuestionHeader\">New Question</div>\r\n            <p className=\"charCount\">\r\n              Min: {this.state.question.length}/{this.state.questionMinLength}\r\n              {\" \"}\r\n              Max: {this.state.question.length}/{this.state.questionMaxLength}\r\n            </p>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"newQuestionInput\"\r\n              placeholder=\"Write question here...\"\r\n              maxLength={this.state.questionMaxLength}\r\n              minLength={this.state.questionMinLength}\r\n              onChange={this.questionOnChanged}\r\n            ></textarea>\r\n            <div className=\"buttonContainer\">\r\n                <Button active={true} text=\"Post\" buttonType=\"postButton\" onclick={this.submitQuestion}></Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentView;\r\n","import React from \"react\";\r\nimport RouteButton from \"./RouteButton.jsx\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nexport default class CreateAccountPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPass: \"\",\r\n      ubit: \"\",\r\n      accType: \"student\",\r\n    };\r\n  }\r\n\r\n  createAccount = () => {\r\n    var name = this.state.name;\r\n    var email = this.state.email;\r\n    var ubit = this.state.ubit;\r\n    var cPass = this.state.confirmPass;\r\n    var pass = this.state.password;\r\n    var accType = this.state.accType;\r\n    var success = true;\r\n    if (cPass != pass) {\r\n      return false;\r\n    }\r\n    bcrypt.genSalt(10, function (err, salt) {\r\n      bcrypt.hash(pass, salt, function (err, hash) {\r\n        var b64hash = btoa(hash);\r\n        fetch(\"/register\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            email: email,\r\n            password: b64hash,\r\n            name: name,\r\n            ubit: ubit,\r\n            salt: salt,\r\n            accType: accType,\r\n          }),\r\n        });\r\n      });\r\n    });\r\n    return success;\r\n  };\r\n\r\n  nameOnChange = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  emailOnChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n  passwordOnChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  confirmPassOnChange = (event) => {\r\n    this.setState({ confirmPass: event.target.value });\r\n  };\r\n\r\n  ubitOnChange = (event) => {\r\n    this.setState({ ubit: event.target.value });\r\n  };\r\n\r\n  accTypeOnChange = (event) => {\r\n    this.setState({ accType: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"createPageContainer\">\r\n        <div className=\"logoText\">OH-Helper</div>\r\n        <div className=\"createWindowContainer\">\r\n          <div className=\"createWindow\">\r\n            <p className=\"createHeader\">Create Account</p>\r\n            <div className=\"lineBreak\"></div>\r\n            <p className=\"name inputHeader\">Full Name:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"name input\"\r\n              placeholder=\"Full Name...\"\r\n              onChange={this.nameOnChange}\r\n            />\r\n            <p className=\"email inputHeader\">Email:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"email input\"\r\n              placeholder=\"Email...\"\r\n              onChange={this.emailOnChange}\r\n            />\r\n            <p className=\"password inputHeader\">Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              className=\"password input\"\r\n              placeholder=\"Password...\"\r\n              onChange={this.passwordOnChange}\r\n            />\r\n            <p className=\"cPassword inputHeader\">Confirm Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              className=\"cPassword input\"\r\n              placeholder=\"Confirm Password...\"\r\n              onChange={this.confirmPassOnChange}\r\n            />\r\n            <p className=\"ubit inputHeader\">UBIT:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"ubit input\"\r\n              placeholder=\"UBIT...\"\r\n              onChange={this.ubitOnChange}\r\n            />\r\n            <p className=\"accType inputHeader\">Account Type:</p>\r\n            <select\r\n              className=\"accountType dropdown\"\r\n              onChange={this.accTypeOnChange}\r\n            >\r\n              <option value=\"student\"> Student</option>\r\n              <option value=\"teacher\">Teacher</option>\r\n            </select>\r\n            <RouteButton\r\n              active={true}\r\n              route=\"/\"\r\n              onclick={this.createAccount}\r\n              text=\"Create Account\"\r\n              buttonType=\"createButton\"\r\n            ></RouteButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport LoginPage from \"./Components/LoginPage\";\r\nimport TeacherView from \"./Components/TeacherView\";\r\nimport StudentView from \"./Components/StudentView\";\r\nimport CreateAccountPage from \"./Components/CreateAccountPage\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: false,\r\n      student: true, // default to student privledges\r\n    };\r\n  }\r\n\r\n  setLoginFlag = (student) => {\r\n    this.setState({loggedIn: true, student: student})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <div className={this.state.loggedIn ? \"mContent\" : \"mContentOut\"}>\r\n            <Switch>\r\n              <Route path=\"/createAccount\">\r\n                <CreateAccountPage />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                {this.state.loggedIn ? (\r\n                  this.state.student ? (\r\n                    <StudentView /> //TODO: maybe redirects instead?\r\n                  ) : (\r\n                    <TeacherView /> //TODO: maybe redirects instead?\r\n                  )\r\n                ) : (\r\n                  <LoginPage loginFlag={this.setLoginFlag} /> //TODO: maybe redirects instead?\r\n                )}\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  BrowserRouter as Router\r\n} from 'react-router-dom';\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}