{"version":3,"sources":["Components/Button.jsx","Components/RouteButton.jsx","Components/LoginPage.jsx","Components/DropDownOption.jsx","Components/DropDownMenu.jsx","Components/DropDownComponent.jsx","Components/Ticket.jsx","Components/TeacherView.jsx","Assets/blankProfilePhoto.png","Components/TATile.jsx","Components/StudentView.jsx","Components/CreateAccountPage.jsx","Components/StudentOption.jsx","Components/TASelectPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Button","className","this","props","active","buttonType","onClick","onclick","text","React","Component","defaultProps","history","useHistory","push","route","alert","LoginPage","login","email","state","pass","password","fetch","method","headers","body","JSON","stringify","salt","then","response","json","success","AccType","loginFlag","Username","emailOnChange","event","setState","target","value","passwordOnChange","type","name","id","placeholder","onChange","DropDownOption","last","first","DropDownMenu","options","map","option","at","DropDownComponent","dropPressed","isDropped","Ticket","teacherOptions","admin","optionsList","console","log","question","TeacherView","searchOnChanged","searchText","submitQuestion","ticket","searchResults","student","result","TATile","src","img","alt","defaultImage","special","join","StudentView","questionOnChanged","activeTAs","questionMaxLength","questionMinLength","ta","specialties","length","maxLength","minLength","CreateAccountPage","createAccount","ubit","cPass","confirmPass","accType","nameOnChange","confirmPassOnChange","ubitOnChange","accTypeOnChange","StudentOption","changeRole","roleBool","selected","newRole","role","status","TASelectPage","componentDidMount","data","studentOptions","App","setLoginFlag","loggedIn","basename","process","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3dcbc76.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\n// Define a general Button component to for ease of creation and functionality\r\n// props to pass:\r\n// props.active = defaults to false. Is the button active or disabled at the moment\r\n// props.text = defaults to \"\". The text to display on the button\r\n// props.onclick = no default. The function to call when the button is clicked\r\n// props.buttonType = defaults to \"\". This is the class(es) that will help to style the button\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.active\r\n            ? \"aButton \" + this.props.buttonType\r\n            : \"iButton \" + this.props.buttonType\r\n        }\r\n        onClick={\r\n          this.props.active\r\n            ? () => this.props.onclick()\r\n            : () => {}\r\n        }\r\n      >\r\n        <span>{this.props.text}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.defaultProps = {\r\n  active: false,\r\n  text: \"\",\r\n  buttonType: \"\",\r\n};\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Define a general Button component to for ease of creation and functionality\r\n// props to pass:\r\n// props.active = defaults to false. Is the button active or disabled at the moment\r\n// props.text = defaults to \"\". The text to display on the button\r\n// props.route = no default. The route to navigate to on click\r\n// props.buttonType = defaults to \"\". This is the class(es) that will help to style the button\r\n\r\nexport default function Button(props) {\r\n  let history = useHistory();\r\n  return (\r\n    <div\r\n      className={\r\n        props.active\r\n          ? \"aButton \" + props.buttonType\r\n          : \"iButton \" + props.buttonType\r\n      }\r\n      onClick={\r\n        props.active\r\n          ? () => {\r\n              props.onclick()\r\n                ? history.push(props.route)\r\n                : alert(\"Something went wrong.\");\r\n            }\r\n          : () => {}\r\n      }\r\n    >\r\n      <span>{props.text}</span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport RouteButton from \"./RouteButton.jsx\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  //TODO: Functions to verify email and password are \"valid\"\r\n\r\n  login = () => {\r\n    var email = this.state.email;\r\n    var pass = this.state.password;\r\n\r\n    // bcrypt.genSalt(10, function (err, salt) {\r\n    //   bcrypt.hash(pass, salt, function (err, hash) {\r\n    //     var b64hash = btoa(hash);\r\n\r\n    //   });\r\n    // });\r\n\r\n    fetch(\"/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email: email, password: pass, salt:\"\"}),\r\n    })\r\n      .then((response) => response != \"\" ? response.json() : \"\")\r\n      .then((success) => {\r\n        if (success !== \"\") {\r\n          if (success.AccType === \"teacher\") {\r\n            this.props.loginFlag(true, false, success.Username);\r\n          } else if (success.AccType === \"student\") {\r\n            this.props.loginFlag(true, true, success.Username);\r\n          } else if (success.AccType === \"instructor\") {\r\n            this.props.loginFlag(true, false, success.Username);\r\n          }\r\n        } else {\r\n          this.props.loginFlag(false, false, \"\");\r\n        }\r\n      });\r\n    //this.props.loginFlag(true, false, \"Jesse Hartloff\");\r\n    return true;\r\n  };\r\n\r\n  emailOnChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  passwordOnChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginPageContainer\">\r\n        <div className=\"logoText\">OH-Helper</div>\r\n        <div className=\"loginWindowContainer\">\r\n          <div className=\"loginWindow\">\r\n            <p className=\"loginHeader\">Login/Create Account</p>\r\n            <div className=\"lineBreak\"></div>\r\n            <p className=\"email inputHeader\">Email:</p>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Email...\"\r\n              onChange={this.emailOnChange}\r\n            />\r\n            <p className=\"password inputHeader\">Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Password...\"\r\n              onChange={this.passwordOnChange}\r\n            />\r\n            <Button\r\n              active={true}\r\n              onclick={this.login}\r\n              text=\"Login\"\r\n              buttonType=\"loginButton\"\r\n            ></Button>\r\n            <RouteButton\r\n              active={true}\r\n              route=\"/createAccount\"\r\n              onclick={() => {\r\n                return true;\r\n              }}\r\n              text=\"Create Account\"\r\n              buttonType=\"createButton\"\r\n            ></RouteButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n\r\n// props:\r\n// name: The class name of the option\r\n// text: The text on the option\r\n// onClick: The function to call when the option is clicked\r\n// active: If the option is active\r\n// last: If its the last option\r\n// first: if its the first option\r\n\r\nexport default class DropDownOption extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.last\r\n            ? this.props.active\r\n              ? this.props.name + \" dropoption active last\"\r\n              : this.props.name + \" dropoption inactive last\"\r\n            : this.props.first\r\n            ? this.props.active\r\n              ? this.props.name + \" dropoption active first\"\r\n              : this.props.name + \" dropoption inactive first\"\r\n            : this.props.active\r\n            ? this.props.name + \" dropoption active\"\r\n            : this.props.name + \" dropoption inactive\"\r\n        }\r\n        onClick={this.props.onClick}\r\n      >\r\n        {this.props.text}\r\n        {this.props.last ? null : <div className=\"dropdownLines\"></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DropDownOption from \"./DropDownOption\";\r\n\r\n// props:\r\n// options: List of kvs that contain the props for the DropDownOption component {name:\"\", text:\"\", active:false/true, onClick:()=>{}}\r\n// active: Whether its active or not\r\n// name: Name of component\r\n// visible: is the menu dropped\r\nexport default class DropDownMenu extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.active\r\n            ? this.props.name + \" dropdown active\"\r\n            : this.props.name + \" dropdown inactive\"\r\n        }\r\n      >\r\n        {this.props.options.map((option) => {\r\n              if (option === this.props.options.at(-1)) {\r\n                return (\r\n                    <DropDownOption\r\n                      key={option.name}\r\n                      name={option.name}\r\n                      text={option.text}\r\n                      active={option.active}\r\n                      onClick={option.onClick}\r\n                      last={true}\r\n                      first={false}\r\n                    />\r\n                  );\r\n              } else if (option === this.props.options.at(0)) {\r\n                return (\r\n                  <DropDownOption\r\n                    key={option.name}\r\n                    name={option.name}\r\n                    text={option.text}\r\n                    active={option.active}\r\n                    onClick={option.onClick}\r\n                    last={false}\r\n                    first={true}\r\n                  />\r\n                );\r\n              } else {\r\n                return (\r\n                  <DropDownOption\r\n                    key={option.name}\r\n                    name={option.name}\r\n                    text={option.text}\r\n                    active={option.active}\r\n                    onClick={option.onClick}\r\n                    last={false}\r\n                    first={false}\r\n                  />\r\n                );\r\n              }\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DropDownMenu from \"./DropDownMenu\";\r\n\r\n// props:\r\n// active: whether the component is active\r\n// name: class name of the component\r\n// options: list of kvs that will be turned into DropDownOptions\r\n// text: text to display on the dropdown button\r\nexport default class DropDownComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDropped: false,\r\n    };\r\n  }\r\n\r\n  dropPressed = () => {\r\n    this.setState({ isDropped: !this.state.isDropped });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.active\r\n            ? this.props.name + \" dropContainer active\"\r\n            : this.props.name + \" dropContainer inactive\"\r\n        }\r\n      >\r\n        <div className=\"dropdownHeader\" onClick={this.dropPressed}>\r\n          {this.props.text}\r\n        </div>\r\n        {this.state.isDropped ? (\r\n          <div className=\"dropComponent\">\r\n            <DropDownMenu\r\n              active={true}\r\n              options={this.props.options}\r\n              name=\"TAOptions\"\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DropDownComponent from \"./DropDownComponent\";\r\n\r\n// props\r\n// name: student name\r\n// question: students question\r\nexport default class Ticket extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      teacherOptions: this.props.admin ? true : false,\r\n      optionsList: [\r\n        {\r\n          name: \"accept\",\r\n          text: \"Accept\",\r\n          active: true,\r\n          onClick: () => {\r\n            console.log(\"test\");\r\n          },\r\n        },\r\n        {\r\n          name: \"delete\",\r\n          text: \"Delete\",\r\n          active: true,\r\n          onClick: () => {\r\n            console.log(\"test\");\r\n          },\r\n        },\r\n        {\r\n          name: \"moveup\",\r\n          text: \"Move Up\",\r\n          active: true,\r\n          onClick: () => {\r\n            console.log(\"test\");\r\n          },\r\n        },\r\n        {\r\n          name: \"movedown\",\r\n          text: \"Move Down\",\r\n          active: true,\r\n          onClick: () => {\r\n            console.log(\"test\");\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"questionWindow\">\r\n        <div className=\"leftContainer\">\r\n          <div className=\"nameHolder\">{this.props.name}</div>\r\n          {this.state.teacherOptions ? (\r\n            <DropDownComponent\r\n              active={true}\r\n              name=\"teacherOptions\"\r\n              options={this.state.optionsList}\r\n              text=\"Options\"\r\n            />\r\n          ) : (\r\n            <div className=\"styleTest\"></div>\r\n          )}\r\n        </div>\r\n        <div className=\"questionHolder\">{this.props.question}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport Ticket from \"./Ticket.jsx\";\r\nimport RouteButton from \"./RouteButton\";\r\n\r\nclass TeacherView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticket: [\r\n        { name: \"John Dunaske\", question: \"Is this a test?\" },\r\n        { name: \"John Dunaske\", question: \"Is this a test?\" },\r\n      ],\r\n      searchResults: [],\r\n      student: false,\r\n      searchText: \"\",\r\n    };\r\n  }\r\n\r\n  searchOnChanged = (event) => {\r\n    this.setState({ searchText: event.target.value });\r\n  };\r\n\r\n  submitQuestion = () => {\r\n    console.log(\"Do stuff\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"teacherViewContainer\">\r\n        <div className=\"teacherQueueContainer\">\r\n          <div className=\"teacher headerText\">Student Queue</div>\r\n          <div className=\"teacherQueueWindow\">\r\n            {this.state.ticket.map((ticket) => {\r\n              return (\r\n                <Ticket\r\n                  key={ticket.name}\r\n                  name={ticket.name}\r\n                  question={ticket.question}\r\n                  admin={true}\r\n                ></Ticket>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"rightMaster\">\r\n          <div className=\"accountName\">{\"Welcome, \" + this.props.name}</div>\r\n          <div className=\"studentSearchHeader\">Student Search:</div>\r\n          <input\r\n            className=\"studentSearchBar\"\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            onChange={this.searchOnChanged}\r\n          ></input>\r\n          <Button buttonType=\"search\" active={true} text=\"Search\"></Button>\r\n          <div className=\"resultsContainer\">\r\n            {this.state.searchResults.map((result) => {\r\n              return <p>Test</p>;\r\n            })}\r\n          </div>\r\n          <RouteButton\r\n            active={true}\r\n            route=\"/taSelector\"\r\n            onclick={() => {\r\n              return true;\r\n            }}\r\n            text=\"Teaching Assistant Select\"\r\n            buttonType=\"taButton\"\r\n          ></RouteButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeacherView;\r\n","export default __webpack_public_path__ + \"static/media/blankProfilePhoto.c3f94521.png\";","import React from \"react\";\r\nimport defaultImage from \"../Assets/blankProfilePhoto.png\";\r\n\r\n// props:\r\n// name = TA name\r\n// img = TA image\r\n// special = TA specialties\r\nexport default class TATile extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"taWindow\">\r\n        <img\r\n          className=\"taImage\"\r\n          src={this.props.img}\r\n          alt={defaultImage}\r\n        />\r\n        <div className=\"rightSide\">\r\n          <div className=\"taName\">{this.props.name}</div>\r\n          <div className=\"lineBreak\"></div>\r\n          <div className=\"taSpecialties\">Specialties:</div>\r\n          <div className=\"taSpecialtiesList\">{this.props.special.join(\", \")}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTATile.defaultProps = {\r\n  img: defaultImage,\r\n};","import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport TATile from \"./TATile.jsx\";\r\nimport Ticket from \"./Ticket.jsx\";\r\n\r\nclass StudentView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticket: [{ name: \"John Dunaske\", question: \"Is this a test?\" }, { name: \"John Dunaske\", question: \"Is this a test?\" }],\r\n      activeTAs: [],\r\n      student: true,\r\n      question: \"\",\r\n      questionMaxLength: 100,\r\n      questionMinLength: 20,\r\n    };\r\n  }\r\n\r\n  questionOnChanged = (event) => {\r\n    this.setState({ question: event.target.value });\r\n  };\r\n\r\n  submitQuestion = () => {\r\n      console.log(\"Do stuff\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"studentViewContainer\">\r\n        <div className=\"studentQueueContainer\">\r\n          <div className=\"student headerText\">Student Queue</div>\r\n          <div className=\"studentQueueWindow\">\r\n            {this.state.ticket.map((ticket) => {\r\n              return (<Ticket name={ticket.name} question={ticket.question} admin={false}></Ticket>)\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"rightMasterStudent\">\r\n          <div className=\"accountName\">{\"Welcome, \" + this.props.name}</div>\r\n          <div className=\"activeTA headerText\">Active TA's</div>\r\n          <div className=\"activeTAWindow\">\r\n            {this.state.activeTAs.map((ta) => {\r\n              return (<TATile name={ta.name} special={ta.specialties}></TATile>)\r\n            })}\r\n          </div>\r\n          <div className=\"newQuestionContainer\">\r\n            <div className=\"newQuestionHeader\">New Question</div>\r\n            <p className=\"charCount\">\r\n              Min: {this.state.question.length}/{this.state.questionMinLength}\r\n              {\" \"}\r\n              Max: {this.state.question.length}/{this.state.questionMaxLength}\r\n            </p>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"newQuestionInput\"\r\n              placeholder=\"Write question here...\"\r\n              maxLength={this.state.questionMaxLength}\r\n              minLength={this.state.questionMinLength}\r\n              onChange={this.questionOnChanged}\r\n            ></textarea>\r\n            <div className=\"buttonContainer\">\r\n                <Button active={true} text=\"Post\" buttonType=\"postButton\" onclick={this.submitQuestion}></Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentView;\r\n","import React from \"react\";\r\nimport RouteButton from \"./RouteButton.jsx\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nexport default class CreateAccountPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPass: \"\",\r\n      ubit: \"\",\r\n      accType: \"student\",\r\n    };\r\n  }\r\n\r\n  createAccount = () => {\r\n    var name = this.state.name;\r\n    var email = this.state.email;\r\n    var ubit = this.state.ubit;\r\n    var cPass = this.state.confirmPass;\r\n    var pass = this.state.password;\r\n    var accType = this.state.accType;\r\n    var success = true;\r\n    if (cPass !== pass) {\r\n      return false;\r\n    }\r\n    // bcrypt.genSalt(10, function (err, salt) {\r\n    //   bcrypt.hash(pass, salt, function (err, hash) {\r\n    //     var b64hash = btoa(hash);\r\n\r\n    //   });\r\n    // });\r\n    fetch(\"/register\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: pass,\r\n        name: name,\r\n        ubit: ubit,\r\n        salt: \"\",\r\n        accType: accType,\r\n      }),\r\n    });\r\n    return success;\r\n  };\r\n\r\n  nameOnChange = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  emailOnChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n  passwordOnChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  confirmPassOnChange = (event) => {\r\n    this.setState({ confirmPass: event.target.value });\r\n  };\r\n\r\n  ubitOnChange = (event) => {\r\n    this.setState({ ubit: event.target.value });\r\n  };\r\n\r\n  accTypeOnChange = (event) => {\r\n    this.setState({ accType: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"createPageContainer\">\r\n        <div className=\"logoText\">OH-Helper</div>\r\n        <div className=\"createWindowContainer\">\r\n          <div className=\"createWindow\">\r\n            <p className=\"createHeader\">Create Account</p>\r\n            <div className=\"lineBreak\"></div>\r\n            <p className=\"name inputHeader\">Full Name:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"name input\"\r\n              placeholder=\"Full Name...\"\r\n              onChange={this.nameOnChange}\r\n            />\r\n            <p className=\"email inputHeader\">Email:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"email input\"\r\n              placeholder=\"Email...\"\r\n              onChange={this.emailOnChange}\r\n            />\r\n            <p className=\"password inputHeader\">Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              className=\"password input\"\r\n              placeholder=\"Password...\"\r\n              onChange={this.passwordOnChange}\r\n            />\r\n            <p className=\"cPassword inputHeader\">Confirm Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              className=\"cPassword input\"\r\n              placeholder=\"Confirm Password...\"\r\n              onChange={this.confirmPassOnChange}\r\n            />\r\n            <p className=\"ubit inputHeader\">UBIT:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"ubit input\"\r\n              placeholder=\"UBIT...\"\r\n              onChange={this.ubitOnChange}\r\n            />\r\n            <p className=\"accType inputHeader\">Account Type:</p>\r\n            <select\r\n              className=\"accountType dropdown\"\r\n              onChange={this.accTypeOnChange}\r\n            >\r\n              <option value=\"student\"> Student</option>\r\n              <option value=\"teacher\">Teacher</option>\r\n            </select>\r\n            <RouteButton\r\n              active={true}\r\n              route=\"/\"\r\n              onclick={this.createAccount}\r\n              text=\"Create Account\"\r\n              buttonType=\"createButton\"\r\n            ></RouteButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nexport default class StudentOption extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: this.props.role,\r\n    };\r\n  }\r\n\r\n  //Change a students role to teacher, or set a teachers role to student\r\n  changeRole = () => {\r\n    //TODO MAKE SECURE (nobody but teacher can access this)\r\n    var roleBool = !this.state.selected;\r\n    var newRole = roleBool ? \"teacher\" : \"student\";\r\n    fetch(\"/role\", {\r\n      method: \"POST\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify({email: this.props.email, role: newRole})\r\n    })\r\n    .then((response) => {\r\n      if (response.status == 404) {\r\n        alert(\"Error: Could not reach server.\")\r\n      } else {\r\n        this.setState({ selected: roleBool });\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.state.selected ? \"studentOption selectedOption\" : \"studentOption\"\r\n        }\r\n      >\r\n        <div className=\"leftController\">\r\n          <div className=\"studentName\">{this.props.name}</div>\r\n          <div className=\"studentEmail\">{this.props.email}</div>\r\n        </div>\r\n        <div className=\"buttonContainer\">\r\n          <Button\r\n            active={true}\r\n            text={this.state.selected ? \"Selected\" : \"Select\"}\r\n            onclick={this.changeRole}\r\n            buttonType={this.state.selected ? \"selectedButton\" : \"selectButton\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport StudentOption from \"./StudentOption\";\r\nimport RouteButton from \"./RouteButton\";\r\n\r\nexport default class TASelectPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      studentOptions: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    fetch(\"/getStudents\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(\"\"),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 404 || response.status === 500) {\r\n          alert(\"Error: Couldn't connect to server\");\r\n          return \"\";\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        this.setState({ studentOptions: data });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pageContainer\">\r\n        <RouteButton\r\n          active={true}\r\n          text={\"Back\"}\r\n          onclick={() => {\r\n            return true;\r\n          }}\r\n          route={\"/\"}\r\n          buttonType={\"backButton\"}\r\n        />\r\n        <div className=\"outerShell\">\r\n          <div className=\"selectContainer\">\r\n            {this.state.studentOptions.map((student) => {\r\n              return (\r\n                <StudentOption\r\n                  key={student.name}\r\n                  name={student.name}\r\n                  email={student.email}\r\n                  role={student.accType}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport LoginPage from \"./Components/LoginPage\";\r\nimport TeacherView from \"./Components/TeacherView\";\r\nimport StudentView from \"./Components/StudentView\";\r\nimport CreateAccountPage from \"./Components/CreateAccountPage\";\r\nimport TASelectPage from \"./Components/TASelectPage\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: false,\r\n      student: true, // default to student privledges\r\n      name: \"\",\r\n    };\r\n  }\r\n\r\n  setLoginFlag = (login, student, name) => {\r\n    this.setState({ loggedIn: login, student: student, name: name });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <div className={this.state.loggedIn ? \"mContent\" : \"mContentOut\"}>\r\n            <Switch>\r\n              <Route path=\"/createAccount\">\r\n                <CreateAccountPage />\r\n              </Route>\r\n              <Route path=\"/taSelector\">\r\n                <TASelectPage />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                {this.state.loggedIn ? (\r\n                  this.state.student ? (\r\n                    <StudentView name={this.state.name} /> //TODO: maybe redirects instead?\r\n                  ) : (\r\n                    <TeacherView name={this.state.name} /> //TODO: maybe redirects instead?\r\n                  )\r\n                ) : (\r\n                  <LoginPage loginFlag={this.setLoginFlag} /> //TODO: maybe redirects instead?\r\n                )}\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  BrowserRouter as Router\r\n} from 'react-router-dom';\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}