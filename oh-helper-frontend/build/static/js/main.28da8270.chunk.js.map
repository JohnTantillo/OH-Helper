{"version":3,"sources":["Components/Button.jsx","Components/RouteButton.jsx","Components/LoginPage.jsx","Components/DropDownOption.jsx","Components/DropDownMenu.jsx","Components/DropDownComponent.jsx","Components/Ticket.jsx","Components/TeacherView.jsx","Assets/blankProfilePhoto.png","Components/TATile.jsx","Components/StudentView.jsx","Components/CreateAccountPage.jsx","Components/StudentOption.jsx","Components/TASelectPage.jsx","Components/PasswordReset.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Button","className","this","props","active","buttonType","onClick","onclick","text","React","Component","defaultProps","history","useHistory","push","route","alert","LoginPage","login","state","email","password","loginFlag","emailOnChange","event","setState","target","value","passwordOnChange","type","name","id","placeholder","onChange","href","DropDownOption","last","first","DropDownMenu","options","map","option","at","DropDownComponent","dropPressed","isDropped","Ticket","teacherOptions","admin","optionsList","console","log","question","TeacherView","searchOnChanged","searchText","submitQuestion","ticket","searchResults","student","result","TATile","src","img","alt","defaultImage","special","join","StudentView","questionOnChanged","activeTAs","questionMaxLength","questionMinLength","ta","specialties","length","maxLength","minLength","CreateAccountPage","createAccount","ubit","cPass","confirmPass","pass","accType","fetch","method","headers","body","JSON","stringify","salt","nameOnChange","confirmPassOnChange","ubitOnChange","accTypeOnChange","StudentOption","changeRole","roleBool","selected","newRole","role","then","response","ok","TASelectPage","componentDidMount","status","json","data","studentOptions","PasswordReset","updateEmail","updatePass","newPass","updateConfirmPass","handleUpdatePass","App","setLoginFlag","loggedIn","basename","process","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28da8270.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\n// Define a general Button component to for ease of creation and functionality\n// props to pass:\n// props.active = defaults to false. Is the button active or disabled at the moment\n// props.text = defaults to \"\". The text to display on the button\n// props.onclick = no default. The function to call when the button is clicked\n// props.buttonType = defaults to \"\". This is the class(es) that will help to style the button\n\nclass Button extends React.Component {\n  render() {\n    return (\n      <div\n        className={\n          this.props.active\n            ? \"aButton \" + this.props.buttonType\n            : \"iButton \" + this.props.buttonType\n        }\n        onClick={\n          this.props.active\n            ? () => this.props.onclick()\n            : () => {}\n        }\n      >\n        <span>{this.props.text}</span>\n      </div>\n    );\n  }\n}\n\nexport default Button;\n\nButton.defaultProps = {\n  active: false,\n  text: \"\",\n  buttonType: \"\",\n};\n","import React from \"react\";\nimport \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\n\n// Define a general Button component to for ease of creation and functionality\n// props to pass:\n// props.active = defaults to false. Is the button active or disabled at the moment\n// props.text = defaults to \"\". The text to display on the button\n// props.route = no default. The route to navigate to on click\n// props.buttonType = defaults to \"\". This is the class(es) that will help to style the button\n\nexport default function Button(props) {\n  let history = useHistory();\n  return (\n    <div\n      className={\n        props.active\n          ? \"aButton \" + props.buttonType\n          : \"iButton \" + props.buttonType\n      }\n      onClick={\n        props.active\n          ? () => {\n              props.onclick()\n                ? history.push(props.route)\n                : alert(\"Something went wrong.\");\n            }\n          : () => {}\n      }\n    >\n      <span>{props.text}</span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"./Button.jsx\";\nimport RouteButton from \"./RouteButton.jsx\";\nimport bcrypt from \"bcryptjs\";\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  //TODO: Functions to verify email and password are \"valid\"\n\n  login = () => {\n    var email = this.state.email;\n    var pass = this.state.password;\n\n    // bcrypt.genSalt(10, function (err, salt) {\n    //   bcrypt.hash(pass, salt, function (err, hash) {\n    //     var b64hash = btoa(hash);\n\n    //   });\n    // });\n\n    // fetch(\"/login\", {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify({ email: email, password: pass, salt:\"\"}),\n    // })\n    //   .then((response) => response !== \"\" ? response.json() : \"\")\n    //   .then((success) => {\n    //     if (success !== \"\") {\n    //       if (success.AccType === \"teacher\") {\n    //         this.props.loginFlag(true, false, success.Username);\n    //       } else if (success.AccType === \"student\") {\n    //         this.props.loginFlag(true, true, success.Username);\n    //       } else if (success.AccType === \"instructor\") {\n    //         this.props.loginFlag(true, false, success.Username);\n    //       }\n    //     } else {\n    //       this.props.loginFlag(false, false, \"\");\n    //     }\n    //   });\n    this.props.loginFlag(true, true, \"Jesse Hartloff\");\n    return true;\n  };\n\n  emailOnChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n\n  passwordOnChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"loginPageContainer\">\n        <div className=\"logoText\">OH-Helper</div>\n        <div className=\"loginWindowContainer\">\n          <div className=\"loginWindow\">\n            <p className=\"loginHeader\">Login/Create Account</p>\n            <div className=\"lineBreak\"></div>\n            <p className=\"email inputHeader\">Email:</p>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              className=\"input\"\n              placeholder=\"Email...\"\n              onChange={this.emailOnChange}\n            />\n            <p className=\"password inputHeader\">Password:</p>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              className=\"input\"\n              placeholder=\"Password...\"\n              onChange={this.passwordOnChange}\n            />\n            <a className=\"forgotPasswordLink\" href=\"/forgotPassword\">Forgot Password?</a>\n            <Button\n              active={true}\n              onclick={this.login}\n              text=\"Login\"\n              buttonType=\"loginButton\"\n            ></Button>\n            <RouteButton\n              active={true}\n              route=\"/createAccount\"\n              onclick={() => {\n                return true;\n              }}\n              text=\"Create Account\"\n              buttonType=\"createButton\"\n            ></RouteButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from \"react\";\n\n// props:\n// name: The class name of the option\n// text: The text on the option\n// onClick: The function to call when the option is clicked\n// active: If the option is active\n// last: If its the last option\n// first: if its the first option\n\nexport default class DropDownOption extends React.Component {\n\n  render() {\n    return (\n      <div\n        className={\n          this.props.last\n            ? this.props.active\n              ? this.props.name + \" dropoption active last\"\n              : this.props.name + \" dropoption inactive last\"\n            : this.props.first\n            ? this.props.active\n              ? this.props.name + \" dropoption active first\"\n              : this.props.name + \" dropoption inactive first\"\n            : this.props.active\n            ? this.props.name + \" dropoption active\"\n            : this.props.name + \" dropoption inactive\"\n        }\n        onClick={this.props.onClick}\n      >\n        {this.props.text}\n        {this.props.last ? null : <div className=\"dropdownLines\"></div>}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport DropDownOption from \"./DropDownOption\";\n\n// props:\n// options: List of kvs that contain the props for the DropDownOption component {name:\"\", text:\"\", active:false/true, onClick:()=>{}}\n// active: Whether its active or not\n// name: Name of component\n// visible: is the menu dropped\nexport default class DropDownMenu extends React.Component {\n\n  render() {\n    return (\n      <div\n        className={\n          this.props.active\n            ? this.props.name + \" dropdown active\"\n            : this.props.name + \" dropdown inactive\"\n        }\n      >\n        {this.props.options.map((option) => {\n              if (option === this.props.options.at(-1)) {\n                return (\n                    <DropDownOption\n                      key={option.name}\n                      name={option.name}\n                      text={option.text}\n                      active={option.active}\n                      onClick={option.onClick}\n                      last={true}\n                      first={false}\n                    />\n                  );\n              } else if (option === this.props.options.at(0)) {\n                return (\n                  <DropDownOption\n                    key={option.name}\n                    name={option.name}\n                    text={option.text}\n                    active={option.active}\n                    onClick={option.onClick}\n                    last={false}\n                    first={true}\n                  />\n                );\n              } else {\n                return (\n                  <DropDownOption\n                    key={option.name}\n                    name={option.name}\n                    text={option.text}\n                    active={option.active}\n                    onClick={option.onClick}\n                    last={false}\n                    first={false}\n                  />\n                );\n              }\n          })}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport DropDownMenu from \"./DropDownMenu\";\n\n// props:\n// active: whether the component is active\n// name: class name of the component\n// options: list of kvs that will be turned into DropDownOptions\n// text: text to display on the dropdown button\nexport default class DropDownComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDropped: false,\n    };\n  }\n\n  dropPressed = () => {\n    this.setState({ isDropped: !this.state.isDropped });\n  };\n\n  render() {\n    return (\n      <div\n        className={\n          this.props.active\n            ? this.props.name + \" dropContainer active\"\n            : this.props.name + \" dropContainer inactive\"\n        }\n      >\n        <div className=\"dropdownHeader\" onClick={this.dropPressed}>\n          {this.props.text}\n        </div>\n        {this.state.isDropped ? (\n          <div className=\"dropComponent\">\n            <DropDownMenu\n              active={true}\n              options={this.props.options}\n              name=\"TAOptions\"\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport DropDownComponent from \"./DropDownComponent\";\n\n// props\n// name: student name\n// question: students question\nexport default class Ticket extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teacherOptions: this.props.admin ? true : false,\n      optionsList: [\n        {\n          name: \"accept\",\n          text: \"Accept\",\n          active: true,\n          onClick: () => {\n            console.log(\"test\");\n          },\n        },\n        {\n          name: \"delete\",\n          text: \"Delete\",\n          active: true,\n          onClick: () => {\n            console.log(\"test\");\n          },\n        },\n        {\n          name: \"moveup\",\n          text: \"Move Up\",\n          active: true,\n          onClick: () => {\n            console.log(\"test\");\n          },\n        },\n        {\n          name: \"movedown\",\n          text: \"Move Down\",\n          active: true,\n          onClick: () => {\n            console.log(\"test\");\n          },\n        },\n      ],\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"questionWindow\">\n        <div className=\"leftContainer\">\n          <div className=\"nameHolder\">{this.props.name}</div>\n          {this.state.teacherOptions ? (\n            <DropDownComponent\n              active={true}\n              name=\"teacherOptions\"\n              options={this.state.optionsList}\n              text=\"Options\"\n            />\n          ) : (\n            <div className=\"styleTest\"></div>\n          )}\n        </div>\n        <div className=\"questionHolder\">{this.props.question}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Button from \"./Button.jsx\";\nimport Ticket from \"./Ticket.jsx\";\nimport RouteButton from \"./RouteButton\";\n\nclass TeacherView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ticket: [\n        { name: \"John Dunaske\", question: \"Is this a test?\" },\n        { name: \"John Dunaske\", question: \"Is this a test?\" },\n      ],\n      searchResults: [],\n      student: false,\n      searchText: \"\",\n    };\n  }\n\n  searchOnChanged = (event) => {\n    this.setState({ searchText: event.target.value });\n  };\n\n  submitQuestion = () => {\n    console.log(\"Do stuff\");\n  };\n\n  render() {\n    return (\n      <div className=\"teacherViewContainer\">\n        <div className=\"teacherQueueContainer\">\n          <div className=\"teacher headerText\">Student Queue</div>\n          <div className=\"teacherQueueWindow\">\n            {this.state.ticket.map((ticket) => {\n              return (\n                <Ticket\n                  key={ticket.name}\n                  name={ticket.name}\n                  question={ticket.question}\n                  admin={true}\n                ></Ticket>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"rightMaster\">\n          <div className=\"accountName\">{\"Welcome, \" + this.props.name}</div>\n          <div className=\"studentSearchHeader\">Student Search:</div>\n          <input\n            className=\"studentSearchBar\"\n            type=\"text\"\n            placeholder=\"Search...\"\n            onChange={this.searchOnChanged}\n          ></input>\n          <Button buttonType=\"search\" active={true} text=\"Search\"></Button>\n          <div className=\"resultsContainer\">\n            {this.state.searchResults.map((result) => {\n              return <p>Test</p>;\n            })}\n          </div>\n          <RouteButton\n            active={true}\n            route=\"/taSelector\"\n            onclick={() => {\n              return true;\n            }}\n            text=\"Teaching Assistant Select\"\n            buttonType=\"taButton\"\n          ></RouteButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TeacherView;\n","export default __webpack_public_path__ + \"static/media/blankProfilePhoto.c3f94521.png\";","import React from \"react\";\nimport defaultImage from \"../Assets/blankProfilePhoto.png\";\n\n// props:\n// name = TA name\n// img = TA image\n// special = TA specialties\nexport default class TATile extends React.Component {\n  render() {\n    return (\n      <div className=\"taWindow\">\n        <img\n          className=\"taImage\"\n          src={this.props.img}\n          alt={defaultImage}\n        />\n        <div className=\"rightSide\">\n          <div className=\"taName\">{this.props.name}</div>\n          <div className=\"lineBreak\"></div>\n          <div className=\"taSpecialties\">Specialties:</div>\n          <div className=\"taSpecialtiesList\">{this.props.special.join(\", \")}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTATile.defaultProps = {\n  img: defaultImage,\n};","import React from \"react\";\nimport Button from \"./Button.jsx\";\nimport TATile from \"./TATile.jsx\";\nimport Ticket from \"./Ticket.jsx\";\n\nclass StudentView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ticket: [],\n      activeTAs: [],\n      student: true,\n      question: \"\",\n      questionMaxLength: 100,\n      questionMinLength: 20,\n    };\n  }\n\n  questionOnChanged = (event) => {\n    this.setState({ question: event.target.value });\n  };\n\n  submitQuestion = () => {\n      \n  }\n\n  render() {\n    return (\n      <div className=\"studentViewContainer\">\n        <div className=\"studentQueueContainer\">\n          <div className=\"student headerText\">Student Queue</div>\n          <div className=\"studentQueueWindow\">\n            {this.state.ticket.map((ticket) => {\n              return (<Ticket name={ticket.name} question={ticket.question} admin={false}></Ticket>)\n            })}\n          </div>\n        </div>\n        <div className=\"rightMasterStudent\">\n          <div className=\"welcomeStudent\">{\"Welcome, \" + this.props.name}</div>\n          <div className=\"activeTA headerText\">Active TA's</div>\n          <div className=\"activeTAWindow\">\n            {this.state.activeTAs.map((ta) => {\n              return (<TATile name={ta.name} special={ta.specialties}></TATile>)\n            })}\n          </div>\n          <div className=\"newQuestionContainer\">\n            <div className=\"newQuestionHeader\">New Question</div>\n            <p className=\"charCount\">\n              Min: {this.state.question.length}/{this.state.questionMinLength}\n              {\" \"}\n              Max: {this.state.question.length}/{this.state.questionMaxLength}\n            </p>\n            <textarea\n              type=\"text\"\n              className=\"newQuestionInput\"\n              placeholder=\"Write question here...\"\n              maxLength={this.state.questionMaxLength}\n              minLength={this.state.questionMinLength}\n              onChange={this.questionOnChanged}\n            ></textarea>\n            <div className=\"studentButtonContainer\">\n                <Button active={true} text=\"Post\" buttonType=\"postButton\" onclick={this.submitQuestion}></Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StudentView;\n","import React from \"react\";\nimport RouteButton from \"./RouteButton.jsx\";\nimport bcrypt from \"bcryptjs\";\n\nexport default class CreateAccountPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPass: \"\",\n      ubit: \"\",\n      accType: \"student\",\n    };\n  }\n\n  createAccount = () => {\n    var name = this.state.name;\n    var email = this.state.email;\n    var ubit = this.state.ubit;\n    var cPass = this.state.confirmPass;\n    var pass = this.state.password;\n    var accType = this.state.accType;\n    var success = true;\n    if (cPass !== pass) {\n      return false;\n    }\n    // bcrypt.genSalt(10, function (err, salt) {\n    //   bcrypt.hash(pass, salt, function (err, hash) {\n    //     var b64hash = btoa(hash);\n\n    //   });\n    // });\n    fetch(\"/register\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: email,\n        password: pass,\n        name: name,\n        ubit: ubit,\n        salt: \"\",\n        accType: accType,\n      }),\n    });\n    return success;\n  };\n\n  nameOnChange = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  emailOnChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n  passwordOnChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  confirmPassOnChange = (event) => {\n    this.setState({ confirmPass: event.target.value });\n  };\n\n  ubitOnChange = (event) => {\n    this.setState({ ubit: event.target.value });\n  };\n\n  accTypeOnChange = (event) => {\n    this.setState({ accType: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"createPageContainer\">\n        <div className=\"logoText\">OH-Helper</div>\n        <div className=\"createWindowContainer\">\n          <div className=\"createWindow\">\n            <p className=\"createHeader\">Create Account</p>\n            <div className=\"lineBreak\"></div>\n            <p className=\"name inputHeader\">Full Name:</p>\n            <input\n              type=\"text\"\n              className=\"name input\"\n              placeholder=\"Full Name...\"\n              onChange={this.nameOnChange}\n            />\n            <p className=\"email inputHeader\">Email:</p>\n            <input\n              type=\"text\"\n              className=\"email input\"\n              placeholder=\"Email...\"\n              onChange={this.emailOnChange}\n            />\n            <p className=\"password inputHeader\">Password:</p>\n            <input\n              type=\"password\"\n              className=\"password input\"\n              placeholder=\"Password...\"\n              onChange={this.passwordOnChange}\n            />\n            <p className=\"cPassword inputHeader\">Confirm Password:</p>\n            <input\n              type=\"password\"\n              className=\"cPassword input\"\n              placeholder=\"Confirm Password...\"\n              onChange={this.confirmPassOnChange}\n            />\n            <p className=\"ubit inputHeader\">UBIT:</p>\n            <input\n              type=\"text\"\n              className=\"ubit input\"\n              placeholder=\"UBIT...\"\n              onChange={this.ubitOnChange}\n            />\n            <p className=\"accType inputHeader\">Account Type:</p>\n            <select\n              className=\"accountType dropdown\"\n              onChange={this.accTypeOnChange}\n            >\n              <option value=\"student\"> Student</option>\n              <option value=\"teacher\">Teacher</option>\n            </select>\n            <RouteButton\n              active={true}\n              route=\"/\"\n              onclick={this.createAccount}\n              text=\"Create Account\"\n              buttonType=\"createButton\"\n            ></RouteButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Button from \"./Button\";\n\nexport default class StudentOption extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: this.props.role,\n    };\n  }\n\n  //Change a students role to teacher, or set a teachers role to student\n  changeRole = () => {\n    //TODO MAKE SECURE (nobody but teacher can access this)\n    var roleBool = !this.state.selected;\n    var newRole = roleBool ? \"teacher\" : \"student\";\n    fetch(\"/role\", {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({email: this.props.email, role: newRole})\n    })\n    .then((response) => {\n      if (response.ok === false) {\n        alert(\"Error: Could not reach server.\")\n      } else {\n        this.setState({ selected: roleBool });\n      }\n    })\n  };\n\n  render() {\n    return (\n      <div\n        className={\n          this.state.selected ? \"studentOption selectedOption\" : \"studentOption\"\n        }\n      >\n        <div className=\"leftController\">\n          <div className=\"studentName\">{this.props.name}</div>\n          <div className=\"studentEmail\">{this.props.email}</div>\n        </div>\n        <div className=\"buttonContainer\">\n          <Button\n            active={true}\n            text={this.state.selected ? \"Selected\" : \"Select\"}\n            onclick={this.changeRole}\n            buttonType={this.state.selected ? \"selectedButton\" : \"selectButton\"}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport StudentOption from \"./StudentOption\";\nimport RouteButton from \"./RouteButton\";\n\nexport default class TASelectPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studentOptions: [],\n    };\n  }\n\n  componentDidMount = () => {\n    fetch(\"/getStudents\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(\"\"),\n    })\n      .then((response) => {\n        if (response.status === 404 || response.status === 500) {\n          alert(\"Error: Couldn't connect to server\");\n          return \"\";\n        } else {\n          return response.json();\n        }\n      })\n      .then((data) => {\n        this.setState({ studentOptions: data });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"pageContainer\">\n        <RouteButton\n          active={true}\n          text={\"Back\"}\n          onclick={() => {\n            return true;\n          }}\n          route={\"/\"}\n          buttonType={\"backButton\"}\n        />\n        <div className=\"outerShell\">\n          <div className=\"selectContainer\">\n            {this.state.studentOptions.map((student) => {\n              return (\n                <StudentOption\n                  key={student.name}\n                  name={student.name}\n                  email={student.email}\n                  role={student.accType}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport RouteButton from \"./RouteButton.jsx\";\n\n\nexport default class PasswordReset extends React.Component {\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            email: \"\",\n            newPass: \"\",\n            confirmPass: \"\",\n        };\n    }\n\n    updateEmail = (event) => {\n        this.setState({email: event.target.value});\n    }\n\n    updatePass = (event) => {\n        this.setState({newPass: event.target.value});\n    }\n\n    updateConfirmPass = (event) => {\n        this.setState({confirmPass: event.target.value});\n    }\n\n    handleUpdatePass = () => {\n        fetch(\"/password_reset\")\n        .then((response) => {\n            if (response.ok === false) {\n                alert(\"Error connecting to server.\");\n            } else {\n                console.log(response);\n            }\n        })\n        return true;\n    }\n\n    render() {\n        return(\n            <div className=\"pageContainer\">\n                <div className=\"passWindowContainer\">\n                    <div className=\"passWindow\">\n                        <p className=\"resetLabel\">Password Reset</p>\n                        <div className=\"lineBreak\"></div>\n                        <p className=\"emailLabel\">Account Email:</p>\n                        <input type=\"email\" className=\"emailInput\" placeholder=\"Account Email...\" onChange={this.updateEmail}/>\n                        <p className=\"passwordLabel\">New Password:</p>\n                        <input type=\"password\" className=\"passwordInput\" placeholder=\"New Password...\" onChange={this.updatePass}/>\n                        <p className=\"confirmPasswordLabel\">Confirm New Password:</p>\n                        <input type=\"password\" className=\"confirmPasswordInput\" placeholder=\"Confirm Password...\" onChange={this.updateConfirmPass}/>\n                        <RouteButton active={true} text={\"Reset\"} route={\"/\"} buttonType={\"resetButton\"} onclick={this.handleUpdatePass}></RouteButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import \"./App.css\";\nimport React from \"react\";\nimport LoginPage from \"./Components/LoginPage\";\nimport TeacherView from \"./Components/TeacherView\";\nimport StudentView from \"./Components/StudentView\";\nimport CreateAccountPage from \"./Components/CreateAccountPage\";\nimport TASelectPage from \"./Components/TASelectPage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PasswordReset from \"./Components/PasswordReset\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      student: true, // default to student privledges\n      name: \"\",\n    };\n  }\n\n  setLoginFlag = (login, student, name) => {\n    this.setState({ loggedIn: login, student: student, name: name });\n  };\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <div className={this.state.loggedIn ? \"mContent\" : \"mContentOut\"}>\n            <Switch>\n              <Route path=\"/createAccount\">\n                <CreateAccountPage />\n              </Route>\n              <Route path=\"/taSelector\">\n                <TASelectPage />\n              </Route>\n              <Route path=\"/forgotPassword\">\n                <PasswordReset />\n              </Route>\n              <Route path=\"/\">\n                {this.state.loggedIn ? (\n                  this.state.student ? (\n                    <StudentView name={this.state.name} /> //TODO: maybe redirects instead?\n                  ) : (\n                    <TeacherView name={this.state.name} /> //TODO: maybe redirects instead?\n                  )\n                ) : (\n                  <LoginPage loginFlag={this.setLoginFlag} /> //TODO: maybe redirects instead?\n                )}\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}