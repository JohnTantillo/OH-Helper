{"version":3,"sources":["Components/Button.jsx","Components/RouteButton.jsx","Components/LoginPage.jsx","Components/StudentView.jsx","Components/CreateAccountPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Button","className","this","props","active","buttonType","onClick","onclick","text","React","Component","defaultProps","history","useHistory","push","route","alert","LoginPage","login","email","state","bcrypt","hash","password","err","b64hash","btoa","fetch","method","headers","body","JSON","stringify","emailOnChange","event","setState","target","value","passwordOnChange","type","name","id","placeholder","StudentView","CreateAccountPage","createAccount","ubit","confirmPass","nameOnChange","confirmPassOnChange","ubitOnChange","onChange","App","loggedIn","student","basename","process","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6135169.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\n// Define a general Button component to for ease of creation and functionality\r\n// props to pass:\r\n// props.active = defaults to false. Is the button active or disabled at the moment\r\n// props.text = defaults to \"\". The text to display on the button\r\n// props.onclick = no default. The function to call when the button is clicked\r\n// props.buttonType = defaults to \"\". This is the class(es) that will help to style the button\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.active\r\n            ? \"aButton \" + this.props.buttonType\r\n            : \"iButton \" + this.props.buttonType\r\n        }\r\n        onClick={\r\n          this.props.active\r\n            ? () => this.props.onclick()\r\n            : () => {}\r\n        }\r\n      >\r\n        <span>{this.props.text}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.defaultProps = {\r\n  active: false,\r\n  text: \"\",\r\n  buttonType: \"\",\r\n};\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Define a general Button component to for ease of creation and functionality\r\n// props to pass:\r\n// props.active = defaults to false. Is the button active or disabled at the moment\r\n// props.text = defaults to \"\". The text to display on the button\r\n// props.route = no default. The route to navigate to on click\r\n// props.buttonType = defaults to \"\". This is the class(es) that will help to style the button\r\n\r\nexport default function Button(props) {\r\n  let history = useHistory();\r\n  return (\r\n    <div\r\n      className={\r\n        props.active\r\n          ? \"aButton \" + props.buttonType\r\n          : \"iButton \" + props.buttonType\r\n      }\r\n      onClick={\r\n        props.active\r\n          ? () => {\r\n              props.onclick() ? history.push(props.route) : alert(\"Something went wrong.\")\r\n            }\r\n          : () => {}\r\n      }\r\n    >\r\n      <span>{props.text}</span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport RouteButton from \"./RouteButton.jsx\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  //TODO: Functions to verify email and password are \"valid\"\r\n\r\n  login = () => {\r\n    var email = this.state.email;\r\n    bcrypt.hash(this.state.password, 10, function (err, hash) {\r\n      var b64hash = btoa(hash);\r\n      fetch(\"/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email: email, password: b64hash }),\r\n      })\r\n    })\r\n    return true;\r\n  };\r\n\r\n  emailOnChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  passwordOnChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginPageContainer\">\r\n        <div className=\"logoText\">OH-Helper</div>\r\n        <div className=\"loginWindowContainer\">\r\n          <div className=\"loginWindow\">\r\n            <p className=\"loginHeader\">Login/Create Account</p>\r\n            <div className=\"lineBreak\"></div>\r\n            <p className=\"email inputHeader\">Email:</p>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Email...\"\r\n            />\r\n            <p className=\"password inputHeader\">Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Password...\"\r\n            />\r\n            <Button\r\n              active={true}\r\n              onclick={this.login}\r\n              text=\"Login\"\r\n              buttonType=\"loginButton\"\r\n            ></Button>\r\n            <RouteButton\r\n              active={true}\r\n              route=\"/createAccount\"\r\n              onclick={()=>{return true}}\r\n              text=\"Create Account\"\r\n              buttonType=\"createButton\"\r\n            ></RouteButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n\r\nclass StudentView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>It's dangerous to test alone, take this!</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentView","import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport RouteButton from \"./RouteButton.jsx\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nexport default class CreateAccountPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPass: \"\",\r\n      ubit: \"\",\r\n    };\r\n  }\r\n\r\n  createAccount = () => {\r\n    var name = this.state.name;\r\n    var email = this.state.email;\r\n    var ubit = this.state.ubit;\r\n    var cPass = this.state.confirmPass;\r\n    var success = true;\r\n    if (cPass != this.state.password) {\r\n        return false;\r\n    }\r\n    bcrypt.hash(this.state.password, 10, function (err, hash) {\r\n      var b64hash = btoa(hash);\r\n      fetch(\"/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          password: b64hash,\r\n          name: name,\r\n          ubit: ubit,\r\n        }),\r\n      });\r\n    });\r\n    return success;\r\n  };\r\n\r\n  nameOnChange = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  emailOnChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n  passwordOnChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  confirmPassOnChange = (event) => {\r\n    this.setState({ confirmPass: event.target.value });\r\n  };\r\n\r\n  ubitOnChange = (event) => {\r\n    this.setState({ ubit: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"createPageContainer\">\r\n        <div className=\"logoText\">OH-Helper</div>\r\n        <div className=\"createWindowContainer\">\r\n          <div className=\"createWindow\">\r\n            <p className=\"createHeader\">Create Account</p>\r\n            <div className=\"lineBreak\"></div>\r\n            <p className=\"name inputHeader\">Full Name:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"name input\"\r\n              placeholder=\"Full Name...\"\r\n              onChange={this.nameOnChange}\r\n            />\r\n            <p className=\"email inputHeader\">Email:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"email input\"\r\n              placeholder=\"Email...\"\r\n              onChange={this.emailOnChange}\r\n            />\r\n            <p className=\"password inputHeader\">Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              className=\"password input\"\r\n              placeholder=\"Password...\"\r\n              onChange={this.passwordOnChange}\r\n            />\r\n            <p className=\"cPassword inputHeader\">Confirm Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              className=\"cPassword input\"\r\n              placeholder=\"Confirm Password...\"\r\n              onChange={this.confirmPassOnChange}\r\n            />\r\n            <p className=\"ubit inputHeader\">UBIT:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"ubit input\"\r\n              placeholder=\"UBIT...\"\r\n              onChange={this.ubitOnChange}\r\n            />\r\n            <RouteButton\r\n              active={true}\r\n              route=\"/\"\r\n              onclick={this.createAccount}\r\n              text=\"Create Account\"\r\n              buttonType=\"createButton\"\r\n            ></RouteButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport LoginPage from \"./Components/LoginPage\";\r\nimport TeacherView from \"./Components/TeacherView\";\r\nimport StudentView from \"./Components/StudentView\";\r\nimport CreateAccountPage from \"./Components/CreateAccountPage\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: false,\r\n      student: true, // default to student privledges\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <div className={this.state.loggedIn ? \"mContent\" : \"mContentOut\"}>\r\n            <Switch>\r\n              <Route path=\"/createAccount\">\r\n                <CreateAccountPage />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                {this.state.loggedIn ? (\r\n                  this.state.student ? (\r\n                    <StudentView /> //TODO: maybe redirects instead?\r\n                  ) : (\r\n                    <TeacherView /> //TODO: maybe redirects instead?\r\n                  )\r\n                ) : (\r\n                  <LoginPage /> //TODO: maybe redirects instead?\r\n                )}\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  BrowserRouter as Router\r\n} from 'react-router-dom';\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}