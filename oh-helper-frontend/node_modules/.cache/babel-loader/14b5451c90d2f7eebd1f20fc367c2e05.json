{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J_Dun\\\\OneDrive\\\\Documents\\\\GitHub\\\\OH-Helper\\\\oh-helper-frontend\\\\src\\\\Components\\\\StudentView.jsx\";\nimport React from \"react\";\nimport Button from \"./Button.jsx\";\nimport TATile from \"./TATile.jsx\";\nimport Ticket from \"./Ticket.jsx\"; //import {w3cwebsocket as W3CWebSocket} from \"websocket\";\n//const client = new W3CWebSocket('ws://127.0.0.1:8000')\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudentView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      // client.onopen = () => {\n      //   console.log('WebSocket client connection');\n      // };\n      // client.onmessage = (message) => {\n      //   console.log(message);\n      // }\n      fetch(\"/getStudents\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(\"\")\n      }).then(response => {\n        if (response.ok === false) {\n          alert(\"Error: Couldn't connect to server\");\n          return \"\";\n        } else {\n          return response.json();\n        }\n      }).then(data => {\n        if (data === \"\") {\n          return;\n        }\n\n        var taList = [];\n        data.map(student => {\n          if (student.accType === true) {\n            taList.push(student);\n          }\n        });\n        this.setState({\n          activeTAs: taList\n        });\n      });\n    };\n\n    this.acceptTicket = () => {\n      console.log(\"accepted\"); //TODO: implement accepting tickets\n    };\n\n    this.removeTicket = () => {\n      console.log(\"deleted\"); //TODO: implement removing tickets\n    };\n\n    this.questionOnChanged = event => {\n      this.setState({\n        question: event.target.value\n      });\n    };\n\n    this.priorityOnChanged = event => {\n      this.setState({\n        currentPriority: event.target.value\n      });\n    };\n\n    this.submitQuestion = () => {\n      var ticketData = {\n        Name: this.props.name,\n        Issue: this.state.question,\n        Label: this.state.priorityLevels[this.state.currentPriority],\n        Action: \"Add\"\n      };\n    };\n\n    this.state = {\n      ticket: [{\n        name: \"John Dunaske\",\n        question: \"This is a question\",\n        priority: 0\n      }],\n      activeTAs: [],\n      student: true,\n      question: \"\",\n      questionMaxLength: 100,\n      questionMinLength: 20,\n      priorityLevels: {\n        Homework: 0,\n        Exam: 1,\n        Lab: 2,\n        Lecture: 3\n      },\n      currentPriority: \"Homework\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"studentViewContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"studentQueueContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student headerText\",\n          children: \"Student Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"studentQueueWindow\",\n          children: this.state.ticket.map(ticket => {\n            return /*#__PURE__*/_jsxDEV(Ticket, {\n              name: ticket.name,\n              question: ticket.question,\n              admin: false,\n              priority: this.state.priorityLevels[this.state.currentPriority],\n              acceptFunction: this.acceptTicket,\n              deleteFunction: this.removeTicket\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightMasterStudent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcomeStudent\",\n          children: \"Welcome, \" + this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activeTA headerText\",\n          children: \"Active TA's\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activeTAWindow\",\n          children: this.state.activeTAs.map(ta => {\n            return /*#__PURE__*/_jsxDEV(TATile, {\n              name: ta.name,\n              special: ta.specialties\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newQuestionContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newQuestionHeader\",\n            children: \"New Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"charCount\",\n            children: [\"Min: \", this.state.question.length, \"/\", this.state.questionMinLength, \" \", \"Max: \", this.state.question.length, \"/\", this.state.questionMaxLength]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            className: \"newQuestionInput\",\n            placeholder: \"Write question here...\",\n            maxLength: this.state.questionMaxLength,\n            minLength: this.state.questionMinLength,\n            onChange: this.questionOnChanged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"studentButtonContainer\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              active: true,\n              text: \"Post\",\n              buttonType: \"postButton\",\n              onclick: this.submitQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"priorityDropdown\",\n              onChange: this.priorityOnChanged,\n              children: Object.keys(this.state.priorityLevels).map(key => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  className: \"priorityOption\",\n                  value: key,\n                  children: key\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default StudentView;","map":{"version":3,"sources":["C:/Users/J_Dun/OneDrive/Documents/GitHub/OH-Helper/oh-helper-frontend/src/Components/StudentView.jsx"],"names":["React","Button","TATile","Ticket","StudentView","Component","constructor","props","componentDidMount","fetch","method","headers","body","JSON","stringify","then","response","ok","alert","json","data","taList","map","student","accType","push","setState","activeTAs","acceptTicket","console","log","removeTicket","questionOnChanged","event","question","target","value","priorityOnChanged","currentPriority","submitQuestion","ticketData","Name","name","Issue","state","Label","priorityLevels","Action","ticket","priority","questionMaxLength","questionMinLength","Homework","Exam","Lab","Lecture","render","ta","specialties","length","Object","keys","key"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport TATile from \"./TATile.jsx\";\r\nimport Ticket from \"./Ticket.jsx\";\r\n//import {w3cwebsocket as W3CWebSocket} from \"websocket\";\r\n\r\n//const client = new W3CWebSocket('ws://127.0.0.1:8000')\r\n\r\nclass StudentView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticket: [\r\n        { name: \"John Dunaske\", question: \"This is a question\", priority: 0 },\r\n      ],\r\n      activeTAs: [],\r\n      student: true,\r\n      question: \"\",\r\n      questionMaxLength: 100,\r\n      questionMinLength: 20,\r\n      priorityLevels: { Homework: 0, Exam: 1, Lab: 2, Lecture: 3 },\r\n      currentPriority: \"Homework\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // client.onopen = () => {\r\n    //   console.log('WebSocket client connection');\r\n    // };\r\n    // client.onmessage = (message) => {\r\n    //   console.log(message);\r\n    // }\r\n\r\n    fetch(\"/getStudents\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(\"\"),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok === false) {\r\n          alert(\"Error: Couldn't connect to server\");\r\n          return \"\";\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (data === \"\") {\r\n          return;\r\n        }\r\n        var taList = [];\r\n        data.map((student) => {\r\n          if (student.accType === true) {\r\n            taList.push(student);\r\n          }\r\n        });\r\n\r\n        this.setState({ activeTAs: taList });\r\n      });\r\n  };\r\n\r\n  acceptTicket = () => {\r\n    console.log(\"accepted\");\r\n    //TODO: implement accepting tickets\r\n  };\r\n\r\n  removeTicket = () => {\r\n    console.log(\"deleted\");\r\n    //TODO: implement removing tickets\r\n  }\r\n\r\n  questionOnChanged = (event) => {\r\n    this.setState({ question: event.target.value });\r\n  };\r\n\r\n  priorityOnChanged = (event) => {\r\n    this.setState({ currentPriority: event.target.value });\r\n  };\r\n\r\n  submitQuestion = () => {\r\n    var ticketData = {\r\n      Name: this.props.name,\r\n      Issue: this.state.question,\r\n      Label: this.state.priorityLevels[this.state.currentPriority],\r\n      Action: \"Add\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"studentViewContainer\">\r\n        <div className=\"studentQueueContainer\">\r\n          <div className=\"student headerText\">Student Queue</div>\r\n          <div className=\"studentQueueWindow\">\r\n            {this.state.ticket.map((ticket) => {\r\n              return (\r\n                <Ticket\r\n                  name={ticket.name}\r\n                  question={ticket.question}\r\n                  admin={false}\r\n                  priority={\r\n                    this.state.priorityLevels[this.state.currentPriority]\r\n                  }\r\n                  acceptFunction={this.acceptTicket}\r\n                  deleteFunction={this.removeTicket}\r\n                ></Ticket>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"rightMasterStudent\">\r\n          <div className=\"welcomeStudent\">{\"Welcome, \" + this.props.name}</div>\r\n          <div className=\"activeTA headerText\">Active TA's</div>\r\n          <div className=\"activeTAWindow\">\r\n            {this.state.activeTAs.map((ta) => {\r\n              return <TATile name={ta.name} special={ta.specialties} />;\r\n            })}\r\n          </div>\r\n          <div className=\"newQuestionContainer\">\r\n            <div className=\"newQuestionHeader\">New Question</div>\r\n            <p className=\"charCount\">\r\n              Min: {this.state.question.length}/{this.state.questionMinLength}{\" \"}\r\n              Max: {this.state.question.length}/{this.state.questionMaxLength}\r\n            </p>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"newQuestionInput\"\r\n              placeholder=\"Write question here...\"\r\n              maxLength={this.state.questionMaxLength}\r\n              minLength={this.state.questionMinLength}\r\n              onChange={this.questionOnChanged}\r\n            ></textarea>\r\n            <div className=\"studentButtonContainer\">\r\n              <Button\r\n                active={true}\r\n                text=\"Post\"\r\n                buttonType=\"postButton\"\r\n                onclick={this.submitQuestion}\r\n              ></Button>\r\n              <select\r\n                className=\"priorityDropdown\"\r\n                onChange={this.priorityOnChanged}\r\n              >\r\n                {Object.keys(this.state.priorityLevels).map((key) => {\r\n                  return (\r\n                    <option className=\"priorityOption\" value={key}>\r\n                      {key}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentView;\r\n"]},"metadata":{},"sourceType":"module"}