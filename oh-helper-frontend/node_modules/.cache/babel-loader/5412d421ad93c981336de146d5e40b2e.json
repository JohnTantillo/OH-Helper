{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J_Dun\\\\OneDrive\\\\Documents\\\\GitHub\\\\OH-Helper\\\\oh-helper-frontend\\\\src\\\\Components\\\\LoginPage.jsx\";\nimport React from \"react\";\nimport Button from \"./Button.jsx\";\nimport RouteButton from \"./RouteButton.jsx\";\nimport bcrypt from \"bcryptjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.login = () => {\n      var email = this.state.email;\n      var pass = this.state.password;\n      bcrypt.genSalt(10, function (err, salt) {\n        bcrypt.hash(pass, salt, function (err, hash) {\n          var b64hash = btoa(hash);\n          fetch(\"/login\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              email: email,\n              password: b64hash,\n              salt: salt\n            })\n          }).then(response => {\n            if (response != null && response != \"\") {\n              return response.json();\n            } else {\n              return \"\";\n            }\n          }).then(success => {\n            if (success != \"\") {\n              if (success.Role == \"TA\") {\n                this.props.loginFlag(true, true, success.Username);\n              } else if (success.Role == \"Student\") {\n                this.props.loginFlag(true, false, success.Username);\n              } else if (success.Role == \"Instructor\") {\n                this.props.loginFlag(true, true, success.Username);\n              }\n            } else {\n              this.props.loginFlag(false, false, \"\");\n            }\n          });\n        });\n      });\n      return true;\n    };\n\n    this.emailOnChange = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.passwordOnChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  } //TODO: Functions to verify email and password are \"valid\"\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginPageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logoText\",\n        children: \"OH-Helper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginWindowContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginWindow\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"loginHeader\",\n            children: \"Login/Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lineBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"email inputHeader\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            className: \"input\",\n            placeholder: \"Email...\",\n            onChange: this.emailOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"password inputHeader\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            className: \"input\",\n            placeholder: \"Password...\",\n            onChange: this.passwordOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            active: true,\n            onclick: this.login,\n            text: \"Login\",\n            buttonType: \"loginButton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RouteButton, {\n            active: true,\n            route: \"/createAccount\",\n            onclick: () => {\n              return true;\n            },\n            text: \"Create Account\",\n            buttonType: \"createButton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Users/J_Dun/OneDrive/Documents/GitHub/OH-Helper/oh-helper-frontend/src/Components/LoginPage.jsx"],"names":["React","Button","RouteButton","bcrypt","LoginPage","Component","constructor","props","login","email","state","pass","password","genSalt","err","salt","hash","b64hash","btoa","fetch","method","headers","body","JSON","stringify","then","response","json","success","Role","loginFlag","Username","emailOnChange","event","setState","target","value","passwordOnChange","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport RouteButton from \"./RouteButton.jsx\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  //TODO: Functions to verify email and password are \"valid\"\r\n\r\n  login = () => {\r\n    var email = this.state.email;\r\n    var pass = this.state.password;\r\n\r\n    bcrypt.genSalt(10, function (err, salt) {\r\n      bcrypt.hash(pass, salt, function (err, hash) {\r\n        var b64hash = btoa(hash);\r\n        fetch(\"/login\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ email: email, password: b64hash, salt: salt }),\r\n        })\r\n          .then((response) => {\r\n            if (response != null && response != \"\") {\r\n              return response.json();\r\n            } else {\r\n              return \"\";\r\n            }\r\n          })\r\n          .then((success) => {\r\n            if (success != \"\") {\r\n              if (success.Role == \"TA\") {\r\n                this.props.loginFlag(true, true, success.Username);\r\n              } else if (success.Role == \"Student\") {\r\n                this.props.loginFlag(true, false, success.Username);\r\n              } else if (success.Role == \"Instructor\") {\r\n                this.props.loginFlag(true, true, success.Username);\r\n              }\r\n            } else {\r\n              this.props.loginFlag(false, false, \"\");\r\n            }\r\n          });\r\n      });\r\n    });\r\n    return true;\r\n  };\r\n\r\n  emailOnChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  passwordOnChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginPageContainer\">\r\n        <div className=\"logoText\">OH-Helper</div>\r\n        <div className=\"loginWindowContainer\">\r\n          <div className=\"loginWindow\">\r\n            <p className=\"loginHeader\">Login/Create Account</p>\r\n            <div className=\"lineBreak\"></div>\r\n            <p className=\"email inputHeader\">Email:</p>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Email...\"\r\n              onChange={this.emailOnChange}\r\n            />\r\n            <p className=\"password inputHeader\">Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Password...\"\r\n              onChange={this.passwordOnChange}\r\n            />\r\n            <Button\r\n              active={true}\r\n              onclick={this.login}\r\n              text=\"Login\"\r\n              buttonType=\"loginButton\"\r\n            ></Button>\r\n            <RouteButton\r\n              active={true}\r\n              route=\"/createAccount\"\r\n              onclick={() => {\r\n                return true;\r\n              }}\r\n              text=\"Create Account\"\r\n              buttonType=\"createButton\"\r\n            ></RouteButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}