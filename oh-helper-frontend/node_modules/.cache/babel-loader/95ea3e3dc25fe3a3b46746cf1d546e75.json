{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J_Dun\\\\OneDrive\\\\Documents\\\\GitHub\\\\OH-Helper\\\\oh-helper-frontend\\\\src\\\\Components\\\\StudentView.jsx\";\nimport React from \"react\";\nimport Button from \"./Button.jsx\";\nimport DropDownComponent from \"./DropDownComponent.jsx\";\nimport TATile from \"./TATile.jsx\";\nimport Ticket from \"./Ticket.jsx\"; //import {w3cwebsocket as W3CWebSocket} from \"websocket\";\n//const client = new W3CWebSocket('ws://127.0.0.1:8000')\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudentView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      // client.onopen = () => {\n      //   console.log('WebSocket client connection');\n      // };\n      // client.onmessage = (message) => {\n      //   console.log(message);\n      // }\n      fetch(\"/getStudents\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(\"\")\n      }).then(response => {\n        if (response.ok === false) {\n          alert(\"Error: Couldn't connect to server\");\n          return \"\";\n        } else {\n          return response.json();\n        }\n      }).then(data => {\n        if (data === \"\") {\n          return;\n        }\n\n        var taList = [];\n        data.map(student => {\n          if (student.accType === true) {\n            taList.push(student);\n          }\n\n          this.setState({\n            activeTAs: taList\n          });\n        });\n      }); //TODO get the tickets and display them\n    };\n\n    this.questionOnChanged = event => {\n      this.setState({\n        question: event.target.value\n      });\n    };\n\n    this.submitQuestion = () => {};\n\n    this.state = {\n      ticket: [],\n      activeTAs: [],\n      student: true,\n      question: \"\",\n      questionMaxLength: 100,\n      questionMinLength: 20,\n      priorityLevels: {\n        \"Homework\": 0,\n        \"Exam\": 1,\n        \"Lab\": 2,\n        \"Lecture\": 3\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"studentViewContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"studentQueueContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student headerText\",\n          children: \"Student Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"studentQueueWindow\",\n          children: this.state.ticket.map(ticket => {\n            return /*#__PURE__*/_jsxDEV(Ticket, {\n              name: ticket.name,\n              question: ticket.question,\n              admin: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightMasterStudent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcomeStudent\",\n          children: \"Welcome, \" + this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activeTA headerText\",\n          children: \"Active TA's\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activeTAWindow\",\n          children: this.state.activeTAs.map(ta => {\n            return /*#__PURE__*/_jsxDEV(TATile, {\n              name: ta.name,\n              special: ta.specialties\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newQuestionContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newQuestionHeader\",\n            children: \"New Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"charCount\",\n            children: [\"Min: \", this.state.question.length, \"/\", this.state.questionMinLength, \" \", \"Max: \", this.state.question.length, \"/\", this.state.questionMaxLength]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            className: \"newQuestionInput\",\n            placeholder: \"Write question here...\",\n            maxLength: this.state.questionMaxLength,\n            minLength: this.state.questionMinLength,\n            onChange: this.questionOnChanged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"studentButtonContainer\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              active: true,\n              text: \"Post\",\n              buttonType: \"postButton\",\n              onclick: this.submitQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropDownComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default StudentView;","map":{"version":3,"sources":["C:/Users/J_Dun/OneDrive/Documents/GitHub/OH-Helper/oh-helper-frontend/src/Components/StudentView.jsx"],"names":["React","Button","DropDownComponent","TATile","Ticket","StudentView","Component","constructor","props","componentDidMount","fetch","method","headers","body","JSON","stringify","then","response","ok","alert","json","data","taList","map","student","accType","push","setState","activeTAs","questionOnChanged","event","question","target","value","submitQuestion","state","ticket","questionMaxLength","questionMinLength","priorityLevels","render","name","ta","specialties","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport DropDownComponent from \"./DropDownComponent.jsx\";\r\nimport TATile from \"./TATile.jsx\";\r\nimport Ticket from \"./Ticket.jsx\";\r\n//import {w3cwebsocket as W3CWebSocket} from \"websocket\";\r\n\r\n//const client = new W3CWebSocket('ws://127.0.0.1:8000')\r\n\r\nclass StudentView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticket: [],\r\n      activeTAs: [],\r\n      student: true,\r\n      question: \"\",\r\n      questionMaxLength: 100,\r\n      questionMinLength: 20,\r\n      priorityLevels: {\"Homework\": 0, \"Exam\": 1, \"Lab\": 2, \"Lecture\": 3},\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n\r\n    // client.onopen = () => {\r\n    //   console.log('WebSocket client connection');\r\n    // };\r\n    // client.onmessage = (message) => {\r\n    //   console.log(message);\r\n    // }\r\n\r\n    fetch(\"/getStudents\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(\"\"),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok === false) {\r\n          alert(\"Error: Couldn't connect to server\");\r\n          return \"\";\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (data === \"\") {return}\r\n        var taList = [];\r\n        data.map((student) => {\r\n          if (student.accType === true) {\r\n            taList.push(student);\r\n          }\r\n          this.setState({activeTAs:taList});\r\n        });\r\n      });\r\n      //TODO get the tickets and display them\r\n  }\r\n\r\n  questionOnChanged = (event) => {\r\n    this.setState({ question: event.target.value });\r\n  };\r\n\r\n  submitQuestion = () => {\r\n      \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"studentViewContainer\">\r\n        <div className=\"studentQueueContainer\">\r\n          <div className=\"student headerText\">Student Queue</div>\r\n          <div className=\"studentQueueWindow\">\r\n            {this.state.ticket.map((ticket) => {\r\n              return (<Ticket name={ticket.name} question={ticket.question} admin={false}></Ticket>)\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"rightMasterStudent\">\r\n          <div className=\"welcomeStudent\">{\"Welcome, \" + this.props.name}</div>\r\n          <div className=\"activeTA headerText\">Active TA's</div>\r\n          <div className=\"activeTAWindow\">\r\n            {this.state.activeTAs.map((ta) => {\r\n              return (<TATile name={ta.name} special={ta.specialties}/>)\r\n            })}\r\n          </div>\r\n          <div className=\"newQuestionContainer\">\r\n            <div className=\"newQuestionHeader\">New Question</div>\r\n            <p className=\"charCount\">\r\n              Min: {this.state.question.length}/{this.state.questionMinLength}\r\n              {\" \"}\r\n              Max: {this.state.question.length}/{this.state.questionMaxLength}\r\n            </p>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"newQuestionInput\"\r\n              placeholder=\"Write question here...\"\r\n              maxLength={this.state.questionMaxLength}\r\n              minLength={this.state.questionMinLength}\r\n              onChange={this.questionOnChanged}\r\n            ></textarea>\r\n            <div className=\"studentButtonContainer\">\r\n                <Button active={true} text=\"Post\" buttonType=\"postButton\" onclick={this.submitQuestion}></Button>\r\n                <DropDownComponent/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentView;\r\n"]},"metadata":{},"sourceType":"module"}