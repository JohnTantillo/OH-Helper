[{"C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\index.js":"1","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\App.jsx":"3","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\LoginPage.jsx":"4","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\TeacherView.jsx":"5","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\StudentView.jsx":"6","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\CreateAccountPage.jsx":"7","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\Button.jsx":"8","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\RouteButton.jsx":"9","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\TATile.jsx":"10","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\Ticket.jsx":"11","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\DropDownComponent.jsx":"12","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\DropDownMenu.jsx":"13","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\DropDownOption.jsx":"14"},{"size":543,"mtime":1632769755309,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1632769755310,"results":"17","hashOfConfig":"16"},{"size":1629,"mtime":1634493014245,"results":"18","hashOfConfig":"16"},{"size":3134,"mtime":1634493050320,"results":"19","hashOfConfig":"16"},{"size":1798,"mtime":1634494278275,"results":"20","hashOfConfig":"16"},{"size":2485,"mtime":1634493643126,"results":"21","hashOfConfig":"16"},{"size":3983,"mtime":1634489311209,"results":"22","hashOfConfig":"16"},{"size":1033,"mtime":1632769755306,"results":"23","hashOfConfig":"16"},{"size":1002,"mtime":1633311374016,"results":"24","hashOfConfig":"16"},{"size":788,"mtime":1634332833860,"results":"25","hashOfConfig":"16"},{"size":1687,"mtime":1634408539861,"results":"26","hashOfConfig":"16"},{"size":1175,"mtime":1634408577173,"results":"27","hashOfConfig":"16"},{"size":2020,"mtime":1634483975132,"results":"28","hashOfConfig":"16"},{"size":1113,"mtime":1634483993241,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12msyub",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\index.js",[],"C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\App.jsx",[],"C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\LoginPage.jsx",["60","61"],"import React from \"react\";\r\nimport Button from \"./Button.jsx\";\r\nimport RouteButton from \"./RouteButton.jsx\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  //TODO: Functions to verify email and password are \"valid\"\r\n\r\n  login = () => {\r\n    var email = this.state.email;\r\n    var pass = this.state.password;\r\n\r\n    // bcrypt.genSalt(10, function (err, salt) {\r\n    //   bcrypt.hash(pass, salt, function (err, hash) {\r\n    //     var b64hash = btoa(hash);\r\n        \r\n    //   });\r\n    // });\r\n\r\n    fetch(\"/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email: email, password: pass, salt:\"\"}),\r\n    })\r\n      .then((response) => response != \"\" ? response.json() : \"\")\r\n      .then((success) => {\r\n        console.log(success)\r\n        if (success !== \"\") {\r\n          if (success.AccType === \"teacher\") {\r\n            this.props.loginFlag(true, false, success.Username);\r\n          } else if (success.AccType === \"student\") {\r\n            this.props.loginFlag(true, true, success.Username);\r\n          } else if (success.AccType === \"instructor\") {\r\n            this.props.loginFlag(true, false, success.Username);\r\n          }\r\n        } else {\r\n          this.props.loginFlag(false, false, \"\");\r\n        }\r\n      });\r\n    return true;\r\n  };\r\n\r\n  emailOnChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  passwordOnChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginPageContainer\">\r\n        <div className=\"logoText\">OH-Helper</div>\r\n        <div className=\"loginWindowContainer\">\r\n          <div className=\"loginWindow\">\r\n            <p className=\"loginHeader\">Login/Create Account</p>\r\n            <div className=\"lineBreak\"></div>\r\n            <p className=\"email inputHeader\">Email:</p>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Email...\"\r\n              onChange={this.emailOnChange}\r\n            />\r\n            <p className=\"password inputHeader\">Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Password...\"\r\n              onChange={this.passwordOnChange}\r\n            />\r\n            <Button\r\n              active={true}\r\n              onclick={this.login}\r\n              text=\"Login\"\r\n              buttonType=\"loginButton\"\r\n            ></Button>\r\n            <RouteButton\r\n              active={true}\r\n              route=\"/createAccount\"\r\n              onclick={() => {\r\n                return true;\r\n              }}\r\n              text=\"Create Account\"\r\n              buttonType=\"createButton\"\r\n            ></RouteButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\TeacherView.jsx",[],"C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\StudentView.jsx",[],"C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\CreateAccountPage.jsx",["62"],"import React from \"react\";\r\nimport RouteButton from \"./RouteButton.jsx\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nexport default class CreateAccountPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPass: \"\",\r\n      ubit: \"\",\r\n      accType: \"student\",\r\n    };\r\n  }\r\n\r\n  createAccount = () => {\r\n    var name = this.state.name;\r\n    var email = this.state.email;\r\n    var ubit = this.state.ubit;\r\n    var cPass = this.state.confirmPass;\r\n    var pass = this.state.password;\r\n    var accType = this.state.accType;\r\n    var success = true;\r\n    if (cPass !== pass) {\r\n      return false;\r\n    }\r\n    // bcrypt.genSalt(10, function (err, salt) {\r\n    //   bcrypt.hash(pass, salt, function (err, hash) {\r\n    //     var b64hash = btoa(hash);\r\n        \r\n    //   });\r\n    // });\r\n    fetch(\"/register\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: pass,\r\n        name: name,\r\n        ubit: ubit,\r\n        salt: \"\",\r\n        accType: accType,\r\n      }),\r\n    });\r\n    return success;\r\n  };\r\n\r\n  nameOnChange = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  emailOnChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n  passwordOnChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  confirmPassOnChange = (event) => {\r\n    this.setState({ confirmPass: event.target.value });\r\n  };\r\n\r\n  ubitOnChange = (event) => {\r\n    this.setState({ ubit: event.target.value });\r\n  };\r\n\r\n  accTypeOnChange = (event) => {\r\n    this.setState({ accType: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"createPageContainer\">\r\n        <div className=\"logoText\">OH-Helper</div>\r\n        <div className=\"createWindowContainer\">\r\n          <div className=\"createWindow\">\r\n            <p className=\"createHeader\">Create Account</p>\r\n            <div className=\"lineBreak\"></div>\r\n            <p className=\"name inputHeader\">Full Name:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"name input\"\r\n              placeholder=\"Full Name...\"\r\n              onChange={this.nameOnChange}\r\n            />\r\n            <p className=\"email inputHeader\">Email:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"email input\"\r\n              placeholder=\"Email...\"\r\n              onChange={this.emailOnChange}\r\n            />\r\n            <p className=\"password inputHeader\">Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              className=\"password input\"\r\n              placeholder=\"Password...\"\r\n              onChange={this.passwordOnChange}\r\n            />\r\n            <p className=\"cPassword inputHeader\">Confirm Password:</p>\r\n            <input\r\n              type=\"password\"\r\n              className=\"cPassword input\"\r\n              placeholder=\"Confirm Password...\"\r\n              onChange={this.confirmPassOnChange}\r\n            />\r\n            <p className=\"ubit inputHeader\">UBIT:</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"ubit input\"\r\n              placeholder=\"UBIT...\"\r\n              onChange={this.ubitOnChange}\r\n            />\r\n            <p className=\"accType inputHeader\">Account Type:</p>\r\n            <select\r\n              className=\"accountType dropdown\"\r\n              onChange={this.accTypeOnChange}\r\n            >\r\n              <option value=\"student\"> Student</option>\r\n              <option value=\"teacher\">Teacher</option>\r\n            </select>\r\n            <RouteButton\r\n              active={true}\r\n              route=\"/\"\r\n              onclick={this.createAccount}\r\n              text=\"Create Account\"\r\n              buttonType=\"createButton\"\r\n            ></RouteButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\Button.jsx",[],"C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\RouteButton.jsx",[],"C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\TATile.jsx",[],"C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\Ticket.jsx",[],"C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\DropDownComponent.jsx",[],"C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\DropDownMenu.jsx",[],"C:\\Users\\J_Dun\\OneDrive\\Documents\\GitHub\\OH-Helper\\oh-helper-frontend\\src\\Components\\DropDownOption.jsx",[],{"ruleId":"63","severity":1,"message":"64","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":33,"column":36,"nodeType":"69","messageId":"70","endLine":33,"endColumn":38},{"ruleId":"63","severity":1,"message":"64","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":14},"no-unused-vars","'bcrypt' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]